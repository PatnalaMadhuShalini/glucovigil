<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GlucoVigil - Health Analytics Platform</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
            font-family: 'Inter', sans-serif;
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .card-hover {
            transition: all 0.3s ease;
        }
        
        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        .animate-pulse-slow {
            animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        
        .risk-low { background: linear-gradient(135deg, #10b981, #34d399); }
        .risk-moderate { background: linear-gradient(135deg, #f59e0b, #fbbf24); }
        .risk-high { background: linear-gradient(135deg, #ef4444, #f87171); }
        
        .fade-in {
            animation: fadeIn 0.6s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .slide-in {
            animation: slideIn 0.8s ease-out;
        }
        
        @keyframes slideIn {
            from { opacity: 0; transform: translateX(-30px); }
            to { opacity: 1; transform: translateX(0); }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <div class="flex-shrink-0 flex items-center">
                        <i data-lucide="heart-pulse" class="h-8 w-8 text-blue-600 mr-2"></i>
                        <span class="text-xl font-bold text-gray-900">GlucoVigil</span>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <button onclick="showPage('home')" class="nav-btn text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">Home</button>
                    <button onclick="showPage('dashboard')" class="nav-btn text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">Dashboard</button>
                    <button onclick="showPage('health-data')" class="nav-btn text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">Health Data</button>
                    <button onclick="showPage('analysis')" class="nav-btn text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">Analysis</button>
                    <button onclick="showPage('progress')" class="nav-btn text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">Progress</button>
                    <button onclick="showPage('profile')" class="nav-btn text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">Profile</button>
                    <button onclick="showPage('auth')" class="bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700">Login</button>
                </div>
            </div>
        </div>
    </nav>

    <!-- Home Page -->
    <div id="home-page" class="page">
        <!-- Hero Section -->
        <section class="gradient-bg text-white py-20">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                <div class="animate-pulse-slow mb-8">
                    <i data-lucide="heart-pulse" class="h-20 w-20 mx-auto mb-4"></i>
                </div>
                <h1 class="text-5xl font-bold mb-6 slide-in">Welcome to GlucoVigil</h1>
                <p class="text-xl mb-8 max-w-3xl mx-auto fade-in">Your comprehensive health analytics platform for diabetes risk assessment, health tracking, and personalized wellness insights.</p>
                <button onclick="showPage('profile-creation')" class="bg-white text-blue-600 px-8 py-3 rounded-lg font-semibold text-lg hover:bg-gray-100 transition-colors">Get Started Today</button>
            </div>
        </section>

        <!-- Feature Cards -->
        <section class="py-16 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-center mb-12">Powerful Health Analytics</h2>
                <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                    <div class="card-hover bg-white p-6 rounded-xl shadow-lg border cursor-pointer" onclick="showPage('analysis')">
                        <i data-lucide="brain" class="h-12 w-12 text-blue-600 mb-4"></i>
                        <h3 class="text-xl font-semibold mb-2">Smart Assessment</h3>
                        <p class="text-gray-600">AI-powered risk analysis using comprehensive health data</p>
                    </div>
                    <div class="card-hover bg-white p-6 rounded-xl shadow-lg border cursor-pointer" onclick="showPage('dashboard')">
                        <i data-lucide="activity" class="h-12 w-12 text-green-600 mb-4"></i>
                        <h3 class="text-xl font-semibold mb-2">Health Tracking</h3>
                        <p class="text-gray-600">Monitor vital signs, symptoms, and wellness metrics</p>
                    </div>
                    <div class="card-hover bg-white p-6 rounded-xl shadow-lg border cursor-pointer" onclick="showPage('progress')">
                        <i data-lucide="trending-up" class="h-12 w-12 text-purple-600 mb-4"></i>
                        <h3 class="text-xl font-semibold mb-2">Trend Analysis</h3>
                        <p class="text-gray-600">Visualize health trends and progress over time</p>
                    </div>
                    <div class="card-hover bg-white p-6 rounded-xl shadow-lg border cursor-pointer" onclick="showPage('dashboard')">
                        <i data-lucide="bot" class="h-12 w-12 text-orange-600 mb-4"></i>
                        <h3 class="text-xl font-semibold mb-2">AI Assistant</h3>
                        <p class="text-gray-600">Personalized recommendations and health insights</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- How It Works -->
        <section class="py-16 bg-gray-50">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-center mb-12">How GlucoVigil Works</h2>
                <div class="grid md:grid-cols-3 gap-8">
                    <div class="text-center">
                        <div class="bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span class="text-2xl font-bold text-blue-600">1</span>
                        </div>
                        <h3 class="text-xl font-semibold mb-2">Complete Assessment</h3>
                        <p class="text-gray-600">Fill out comprehensive health profile including medical history, lifestyle factors, and current symptoms</p>
                    </div>
                    <div class="text-center">
                        <div class="bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span class="text-2xl font-bold text-green-600">2</span>
                        </div>
                        <h3 class="text-xl font-semibold mb-2">AI Analysis</h3>
                        <p class="text-gray-600">Our advanced algorithms analyze your data to calculate diabetes risk and identify health patterns</p>
                    </div>
                    <div class="text-center">
                        <div class="bg-purple-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span class="text-2xl font-bold text-purple-600">3</span>
                        </div>
                        <h3 class="text-xl font-semibold mb-2">Personalized Insights</h3>
                        <p class="text-gray-600">Receive tailored recommendations, track progress, and get ongoing health guidance</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Benefits -->
        <section class="py-16 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-center mb-12">Why Choose GlucoVigil?</h2>
                <div class="grid md:grid-cols-2 gap-12 items-center">
                    <div>
                        <ul class="space-y-6">
                            <li class="flex items-start">
                                <i data-lucide="check-circle" class="h-6 w-6 text-green-600 mr-3 mt-1"></i>
                                <div>
                                    <h4 class="font-semibold">Evidence-Based Analysis</h4>
                                    <p class="text-gray-600">Risk assessment based on validated medical research and clinical guidelines</p>
                                </div>
                            </li>
                            <li class="flex items-start">
                                <i data-lucide="shield" class="h-6 w-6 text-green-600 mr-3 mt-1"></i>
                                <div>
                                    <h4 class="font-semibold">Privacy & Security</h4>
                                    <p class="text-gray-600">Your health data is encrypted and securely stored with industry-standard protection</p>
                                </div>
                            </li>
                            <li class="flex items-start">
                                <i data-lucide="users" class="h-6 w-6 text-green-600 mr-3 mt-1"></i>
                                <div>
                                    <h4 class="font-semibold">Healthcare Integration</h4>
                                    <p class="text-gray-600">Generate comprehensive reports to share with your healthcare providers</p>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="text-center">
                        <i data-lucide="heart" class="h-32 w-32 text-red-400 mx-auto mb-4"></i>
                        <p class="text-lg text-gray-600">Join thousands of users taking control of their health with GlucoVigil</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Footer -->
        <footer class="bg-gray-900 text-white py-16">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="grid md:grid-cols-4 gap-8">
                    <!-- Company Info -->
                    <div class="col-span-1">
                        <div class="flex items-center mb-4">
                            <i data-lucide="heart-pulse" class="h-8 w-8 text-blue-400 mr-2"></i>
                            <span class="text-xl font-bold">GlucoVigil</span>
                        </div>
                        <p class="text-gray-400 mb-4">Empowering individuals with comprehensive health analytics and personalized diabetes risk assessment.</p>
                        <div class="flex space-x-4">
                            <a href="#" class="text-gray-400 hover:text-blue-400 transition-colors">
                                <i data-lucide="facebook" class="h-5 w-5"></i>
                            </a>
                            <a href="#" class="text-gray-400 hover:text-blue-400 transition-colors">
                                <i data-lucide="twitter" class="h-5 w-5"></i>
                            </a>
                            <a href="#" class="text-gray-400 hover:text-blue-400 transition-colors">
                                <i data-lucide="linkedin" class="h-5 w-5"></i>
                            </a>
                            <a href="#" class="text-gray-400 hover:text-blue-400 transition-colors">
                                <i data-lucide="instagram" class="h-5 w-5"></i>
                            </a>
                        </div>
                    </div>

                    <!-- Quick Links -->
                    <div>
                        <h3 class="text-lg font-semibold mb-4">Quick Links</h3>
                        <ul class="space-y-2">
                            <li><a href="#" onclick="showPage('home')" class="text-gray-400 hover:text-white transition-colors">Home</a></li>
                            <li><a href="#" onclick="showPage('dashboard')" class="text-gray-400 hover:text-white transition-colors">Dashboard</a></li>
                            <li><a href="#" onclick="showPage('analysis')" class="text-gray-400 hover:text-white transition-colors">Risk Analysis</a></li>
                            <li><a href="#" onclick="showPage('progress')" class="text-gray-400 hover:text-white transition-colors">Progress Tracking</a></li>
                            <li><a href="#" onclick="showPage('profile-creation')" class="text-gray-400 hover:text-white transition-colors">Health Assessment</a></li>
                        </ul>
                    </div>

                    <!-- Resources -->
                    <div>
                        <h3 class="text-lg font-semibold mb-4">Resources</h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Health Education</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Diabetes Prevention</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Nutrition Guide</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Exercise Plans</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Research Papers</a></li>
                        </ul>
                    </div>

                    <!-- Support -->
                    <div>
                        <h3 class="text-lg font-semibold mb-4">Support</h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Help Center</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Contact Us</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Privacy Policy</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Terms of Service</a></li>
                            <li><a href="#" class="text-gray-400 hover:text-white transition-colors">Medical Disclaimer</a></li>
                        </ul>
                    </div>
                </div>

                <!-- Bottom Footer -->
                <div class="border-t border-gray-800 mt-12 pt-8">
                    <div class="flex flex-col md:flex-row justify-between items-center">
                        <p class="text-gray-400 text-sm">© 2024 GlucoVigil. All rights reserved. Empowering healthier lives through data-driven insights.</p>
                        <div class="flex items-center mt-4 md:mt-0">
                            <span class="text-gray-400 text-sm mr-4">Certified Health Analytics Platform</span>
                            <div class="flex items-center">
                                <i data-lucide="shield-check" class="h-4 w-4 text-green-400 mr-1"></i>
                                <span class="text-green-400 text-sm">HIPAA Compliant</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>

    <!-- Authentication Page -->
    <div id="auth-page" class="page hidden">
        <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
            <div class="max-w-md w-full space-y-8">
                <div class="text-center">
                    <i data-lucide="heart-pulse" class="h-12 w-12 text-blue-600 mx-auto mb-4"></i>
                    <h2 class="text-3xl font-bold text-gray-900">Welcome to GlucoVigil</h2>
                    <p class="mt-2 text-gray-600">Sign in to access your health dashboard</p>
                </div>
                
                <div class="bg-white p-8 rounded-lg shadow-lg">
                    <div class="flex mb-6">
                        <button id="login-tab" class="flex-1 py-2 px-4 text-center font-medium border-b-2 border-blue-600 text-blue-600">Login</button>
                        <button id="register-tab" class="flex-1 py-2 px-4 text-center font-medium border-b-2 border-gray-200 text-gray-500">Register</button>
                    </div>
                    
                    <form id="auth-form" class="space-y-6">
                        <div id="register-fields" class="hidden space-y-4">
                            <input type="text" id="fullName" placeholder="Full Name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <input type="email" id="email" placeholder="Email Address" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <input type="text" id="username" placeholder="Username" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <input type="password" id="password" placeholder="Password" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 font-medium">Sign In</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Health Data Management Page -->
    <div id="health-data-page" class="page hidden">
        <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <!-- Header -->
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-4">Health Data Management</h1>
                <p class="text-gray-600">Update your health metrics and track changes over time</p>
            </div>

            <!-- Quick Stats Overview -->
            <div class="grid md:grid-cols-4 gap-6 mb-8">
                <div class="bg-gradient-to-br from-blue-500 to-blue-600 text-white p-6 rounded-xl shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-blue-100 text-sm">Last Updated</p>
                            <p id="last-update-date" class="text-xl font-bold">Today</p>
                        </div>
                        <i data-lucide="calendar" class="h-8 w-8 text-blue-200"></i>
                    </div>
                </div>
                <div class="bg-gradient-to-br from-green-500 to-green-600 text-white p-6 rounded-xl shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-green-100 text-sm">Data Points</p>
                            <p id="total-data-points" class="text-xl font-bold">0</p>
                        </div>
                        <i data-lucide="database" class="h-8 w-8 text-green-200"></i>
                    </div>
                </div>
                <div class="bg-gradient-to-br from-purple-500 to-purple-600 text-white p-6 rounded-xl shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-purple-100 text-sm">Trend</p>
                            <p id="health-trend" class="text-xl font-bold">Improving</p>
                        </div>
                        <i data-lucide="trending-up" class="h-8 w-8 text-purple-200"></i>
                    </div>
                </div>
                <div class="bg-gradient-to-br from-orange-500 to-orange-600 text-white p-6 rounded-xl shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-orange-100 text-sm">Next Check</p>
                            <p id="next-check-date" class="text-xl font-bold">7 days</p>
                        </div>
                        <i data-lucide="clock" class="h-8 w-8 text-orange-200"></i>
                    </div>
                </div>
            </div>

            <!-- Health Data Entry Form -->
            <div class="bg-white rounded-xl shadow-lg p-8 mb-8">
                <h2 class="text-2xl font-bold mb-6 flex items-center">
                    <i data-lucide="plus-circle" class="h-6 w-6 mr-2 text-blue-600"></i>
                    Add New Health Data Entry
                </h2>

                <form id="health-data-form" class="space-y-8">
                    <!-- Date and Time -->
                    <div class="grid md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Date</label>
                            <input type="date" id="entry-date" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Time</label>
                            <input type="time" id="entry-time" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required>
                        </div>
                    </div>

                    <!-- Vital Signs -->
                    <div class="bg-blue-50 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold mb-4 flex items-center">
                            <i data-lucide="heart" class="h-5 w-5 mr-2 text-blue-600"></i>
                            Vital Signs
                        </h3>
                        <div class="grid md:grid-cols-3 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Blood Glucose (mg/dL)</label>
                                <input type="number" id="glucose-reading" min="50" max="500" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="95">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Systolic BP (mmHg)</label>
                                <input type="number" id="systolic-bp" min="80" max="200" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="120">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Diastolic BP (mmHg)</label>
                                <input type="number" id="diastolic-bp" min="40" max="120" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="80">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Heart Rate (bpm)</label>
                                <input type="number" id="heart-rate" min="40" max="200" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="72">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Weight (kg)</label>
                                <input type="number" id="weight-entry" min="30" max="300" step="0.1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="70.5">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Temperature (°C)</label>
                                <input type="number" id="temperature" min="35" max="42" step="0.1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="36.5">
                            </div>
                        </div>
                    </div>

                    <!-- Laboratory Results -->
                    <div class="bg-green-50 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold mb-4 flex items-center">
                            <i data-lucide="flask-conical" class="h-5 w-5 mr-2 text-green-600"></i>
                            Laboratory Results
                        </h3>
                        <div class="grid md:grid-cols-3 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">HbA1c (%)</label>
                                <input type="number" id="hba1c" min="4" max="15" step="0.1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="5.7">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Total Cholesterol (mg/dL)</label>
                                <input type="number" id="cholesterol" min="100" max="400" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="180">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">HDL Cholesterol (mg/dL)</label>
                                <input type="number" id="hdl" min="20" max="100" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="50">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">LDL Cholesterol (mg/dL)</label>
                                <input type="number" id="ldl" min="50" max="300" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="100">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Triglycerides (mg/dL)</label>
                                <input type="number" id="triglycerides" min="50" max="500" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="150">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Creatinine (mg/dL)</label>
                                <input type="number" id="creatinine" min="0.5" max="5" step="0.1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="1.0">
                            </div>
                        </div>
                    </div>

                    <!-- Lifestyle Metrics -->
                    <div class="bg-purple-50 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold mb-4 flex items-center">
                            <i data-lucide="activity" class="h-5 w-5 mr-2 text-purple-600"></i>
                            Lifestyle Metrics
                        </h3>
                        <div class="grid md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Sleep Duration (hours)</label>
                                <input type="number" id="sleep-hours" min="0" max="24" step="0.5" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500" placeholder="8">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Exercise Duration (minutes)</label>
                                <input type="number" id="exercise-minutes" min="0" max="300" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500" placeholder="30">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Water Intake (glasses)</label>
                                <input type="number" id="water-intake" min="0" max="20" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500" placeholder="8">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Stress Level (1-10)</label>
                                <input type="range" id="stress-level-entry" min="1" max="10" value="5" class="w-full">
                                <div class="flex justify-between text-xs text-gray-500">
                                    <span>Low</span>
                                    <span id="stress-display">5</span>
                                    <span>High</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Medications -->
                    <div class="bg-orange-50 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold mb-4 flex items-center">
                            <i data-lucide="pill" class="h-5 w-5 mr-2 text-orange-600"></i>
                            Medications & Supplements
                        </h3>
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Current Medications</label>
                                <textarea id="medications" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500" placeholder="List any medications you're currently taking..."></textarea>
                            </div>
                            <div class="grid md:grid-cols-2 gap-4">
                                <div class="flex items-center">
                                    <input type="checkbox" id="insulin-taken" class="h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded">
                                    <label for="insulin-taken" class="ml-2 text-sm text-gray-700">Insulin taken today</label>
                                </div>
                                <div class="flex items-center">
                                    <input type="checkbox" id="vitamins-taken" class="h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded">
                                    <label for="vitamins-taken" class="ml-2 text-sm text-gray-700">Vitamins/supplements taken</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Notes -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Additional Notes</label>
                        <textarea id="health-notes" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Any additional observations, symptoms, or notes about your health today..."></textarea>
                    </div>

                    <!-- Submit Button -->
                    <div class="flex justify-center">
                        <button type="submit" class="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-3 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 shadow-lg">
                            <i data-lucide="save" class="h-5 w-5 mr-2 inline"></i>
                            Save Health Data Entry
                        </button>
                    </div>
                </form>
            </div>

            <!-- Health Data History -->
            <div class="bg-white rounded-xl shadow-lg p-8">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold flex items-center">
                        <i data-lucide="history" class="h-6 w-6 mr-2 text-green-600"></i>
                        Health Data History
                    </h2>
                    <div class="flex space-x-2">
                        <button onclick="exportHealthData()" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
                            <i data-lucide="download" class="h-4 w-4 mr-1 inline"></i>
                            Export
                        </button>
                        <button onclick="compareHealthData()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                            <i data-lucide="bar-chart-3" class="h-4 w-4 mr-1 inline"></i>
                            Compare
                        </button>
                    </div>
                </div>

                <!-- Data Table -->
                <div class="overflow-x-auto">
                    <table class="w-full table-auto">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Glucose</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Blood Pressure</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Weight</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">HbA1c</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="health-data-table" class="bg-white divide-y divide-gray-200">
                            <!-- Data will be populated here -->
                        </tbody>
                    </table>
                </div>

                <!-- Empty State -->
                <div id="empty-health-data" class="text-center py-12">
                    <i data-lucide="clipboard-list" class="h-16 w-16 text-gray-300 mx-auto mb-4"></i>
                    <h3 class="text-lg font-medium text-gray-900 mb-2">No Health Data Yet</h3>
                    <p class="text-gray-600 mb-4">Start tracking your health by adding your first data entry above.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Creation Page -->
    <div id="profile-creation-page" class="page hidden">
        <div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <div class="bg-white rounded-lg shadow-lg p-8">
                <h1 class="text-3xl font-bold text-center mb-8">Complete Your Health Profile</h1>
                
                <!-- Progress Bar -->
                <div class="mb-8">
                    <div class="flex justify-between text-sm text-gray-600 mb-2">
                        <span>Progress</span>
                        <span id="progress-text">0%</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div id="progress-bar" class="bg-blue-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                </div>

                <form id="profile-form" class="space-y-8">
                    <!-- Demographics Section -->
                    <div class="form-section">
                        <h3 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="user" class="h-5 w-5 mr-2"></i>
                            Demographics
                        </h3>
                        <div class="grid md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Age</label>
                                <input type="number" id="age" min="18" max="120" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Gender</label>
                                <select id="gender" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">Select Gender</option>
                                    <option value="male">Male</option>
                                    <option value="female">Female</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Height (cm)</label>
                                <input type="number" id="height" min="100" max="250" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Weight (kg)</label>
                                <input type="number" id="weight" min="30" max="300" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                        </div>
                    </div>

                    <!-- Physiological Section -->
                    <div class="form-section">
                        <h3 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="heart" class="h-5 w-5 mr-2"></i>
                            Physiological Measurements
                        </h3>
                        <div class="grid md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Fasting Glucose (mg/dL)</label>
                                <input type="number" id="fastingGlucose" min="50" max="400" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Blood Pressure (Systolic)</label>
                                <input type="number" id="bloodPressureSys" min="80" max="200" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Blood Pressure (Diastolic)</label>
                                <input type="number" id="bloodPressureDia" min="40" max="120" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Resting Heart Rate</label>
                                <input type="number" id="heartRate" min="40" max="150" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                        </div>
                    </div>

                    <!-- Lifestyle Section -->
                    <div class="form-section">
                        <h3 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="activity" class="h-5 w-5 mr-2"></i>
                            Lifestyle Factors
                        </h3>
                        <div class="grid md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Exercise Level</label>
                                <select id="exerciseLevel" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">Select Level</option>
                                    <option value="sedentary">Sedentary (little to no exercise)</option>
                                    <option value="light">Light (1-3 days/week)</option>
                                    <option value="moderate">Moderate (3-5 days/week)</option>
                                    <option value="active">Active (6-7 days/week)</option>
                                    <option value="very-active">Very Active (2x/day or intense)</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Diet Quality</label>
                                <select id="dietQuality" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">Select Quality</option>
                                    <option value="poor">Poor (fast food, processed)</option>
                                    <option value="fair">Fair (mixed diet)</option>
                                    <option value="good">Good (balanced, some processed)</option>
                                    <option value="excellent">Excellent (whole foods, balanced)</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Smoking Status</label>
                                <select id="smokingStatus" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">Select Status</option>
                                    <option value="never">Never smoked</option>
                                    <option value="former">Former smoker</option>
                                    <option value="current">Current smoker</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Alcohol Consumption</label>
                                <select id="alcoholConsumption" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">Select Level</option>
                                    <option value="none">None</option>
                                    <option value="light">Light (1-2 drinks/week)</option>
                                    <option value="moderate">Moderate (3-7 drinks/week)</option>
                                    <option value="heavy">Heavy (8+ drinks/week)</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Mental Health Section -->
                    <div class="form-section">
                        <h3 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="brain" class="h-5 w-5 mr-2"></i>
                            Mental Health & Sleep
                        </h3>
                        <div class="grid md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Stress Level (1-10)</label>
                                <input type="range" id="stressLevel" min="1" max="10" value="5" class="w-full">
                                <div class="flex justify-between text-xs text-gray-500">
                                    <span>Low</span>
                                    <span id="stress-value">5</span>
                                    <span>High</span>
                                </div>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Sleep Quality</label>
                                <select id="sleepQuality" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">Select Quality</option>
                                    <option value="poor">Poor (frequent interruptions)</option>
                                    <option value="fair">Fair (some issues)</option>
                                    <option value="good">Good (mostly restful)</option>
                                    <option value="excellent">Excellent (very restful)</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Family History Section -->
                    <div class="form-section">
                        <h3 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="users" class="h-5 w-5 mr-2"></i>
                            Family History
                        </h3>
                        <div class="space-y-4">
                            <div class="flex items-center">
                                <input type="checkbox" id="familyDiabetes" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                <label for="familyDiabetes" class="ml-2 text-sm text-gray-700">Family history of diabetes (parents, siblings)</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="familyHeartDisease" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                <label for="familyHeartDisease" class="ml-2 text-sm text-gray-700">Family history of heart disease</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="familyHypertension" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                <label for="familyHypertension" class="ml-2 text-sm text-gray-700">Family history of hypertension</label>
                            </div>
                        </div>
                    </div>

                    <div class="flex justify-center">
                        <button type="submit" class="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors">Complete Assessment</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Dashboard Page -->
    <div id="dashboard-page" class="page hidden">
        <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <!-- Welcome Banner -->
            <div class="bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg p-6 mb-8">
                <h1 class="text-2xl font-bold mb-2">Welcome <span id="user-name">User</span>!</h1>
                <p id="welcome-subtitle" class="text-blue-100">Here's your health overview for today</p>
            </div>

            <!-- Health Metrics Overview -->
            <div class="grid md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white p-6 rounded-lg shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm text-gray-600">Risk Level</p>
                            <p id="risk-level-text" class="text-2xl font-bold text-green-600">Low</p>
                        </div>
                        <div id="risk-level-icon" class="risk-low w-12 h-12 rounded-full flex items-center justify-center">
                            <i data-lucide="shield-check" class="h-6 w-6 text-white"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm text-gray-600">Blood Sugar</p>
                            <p id="blood-sugar-value" class="text-2xl font-bold">95 mg/dL</p>
                        </div>
                        <i data-lucide="droplet" class="h-8 w-8 text-red-500"></i>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm text-gray-600">Blood Pressure</p>
                            <p id="blood-pressure-value" class="text-2xl font-bold">120/80</p>
                        </div>
                        <i data-lucide="heart" class="h-8 w-8 text-blue-500"></i>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm text-gray-600">BMI</p>
                            <p id="bmi-value" class="text-2xl font-bold">22.5</p>
                        </div>
                        <i data-lucide="scale" class="h-8 w-8 text-green-500"></i>
                    </div>
                </div>
            </div>

            <!-- Recommendations -->
            <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
                <h2 class="text-xl font-semibold mb-4 flex items-center">
                    <i data-lucide="lightbulb" class="h-5 w-5 mr-2 text-yellow-500"></i>
                    Personalized Recommendations
                </h2>
                <div id="recommendations-list" class="space-y-3">
                    <div class="flex items-start p-3 bg-green-50 rounded-lg">
                        <i data-lucide="check-circle" class="h-5 w-5 text-green-600 mr-3 mt-0.5"></i>
                        <p class="text-sm">Great job maintaining your exercise routine! Keep up the 30 minutes of daily activity.</p>
                    </div>
                    <div class="flex items-start p-3 bg-blue-50 rounded-lg">
                        <i data-lucide="info" class="h-5 w-5 text-blue-600 mr-3 mt-0.5"></i>
                        <p class="text-sm">Consider adding more fiber-rich foods to your diet to help regulate blood sugar levels.</p>
                    </div>
                    <div class="flex items-start p-3 bg-yellow-50 rounded-lg">
                        <i data-lucide="clock" class="h-5 w-5 text-yellow-600 mr-3 mt-0.5"></i>
                        <p class="text-sm">Schedule your next health checkup - it's been 6 months since your last visit.</p>
                    </div>
                </div>
            </div>

            <!-- Quick Trackers -->
            <div class="grid md:grid-cols-2 gap-8 mb-8">
                <!-- Advanced Symptom Wizard -->
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 flex items-center">
                        <i data-lucide="stethoscope" class="h-5 w-5 mr-2"></i>
                        Symptom Assessment Wizard
                    </h3>
                    
                    <!-- Symptom Wizard Steps -->
                    <div id="symptom-wizard" class="space-y-4">
                        <!-- Step Indicator -->
                        <div class="flex items-center justify-between mb-6">
                            <div class="flex items-center space-x-2">
                                <div class="symptom-step active w-8 h-8 rounded-full bg-blue-600 text-white flex items-center justify-center text-sm font-medium">1</div>
                                <div class="w-12 h-1 bg-gray-200"></div>
                                <div class="symptom-step w-8 h-8 rounded-full bg-gray-200 text-gray-600 flex items-center justify-center text-sm font-medium">2</div>
                                <div class="w-12 h-1 bg-gray-200"></div>
                                <div class="symptom-step w-8 h-8 rounded-full bg-gray-200 text-gray-600 flex items-center justify-center text-sm font-medium">3</div>
                            </div>
                            <span class="text-sm text-gray-500" id="step-indicator">Step 1 of 3</span>
                        </div>

                        <!-- Step 1: Physical Symptoms -->
                        <div id="symptom-step-1" class="symptom-step-content">
                            <h4 class="font-medium mb-3">Physical Symptoms (Past 7 days)</h4>
                            <div class="space-y-3">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Excessive thirst</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="thirst" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="thirst" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="thirst" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="thirst" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="thirst" data-level="5">5</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Frequent urination</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="urination" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="urination" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="urination" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="urination" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="urination" data-level="5">5</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Unexplained weight loss</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="weightloss" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="weightloss" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="weightloss" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="weightloss" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="weightloss" data-level="5">5</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step 2: Energy & Cognitive -->
                        <div id="symptom-step-2" class="symptom-step-content hidden">
                            <h4 class="font-medium mb-3">Energy & Cognitive Symptoms</h4>
                            <div class="space-y-3">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Fatigue/tiredness</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="fatigue" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="fatigue" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="fatigue" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="fatigue" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="fatigue" data-level="5">5</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Difficulty concentrating</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="concentration" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="concentration" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="concentration" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="concentration" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="concentration" data-level="5">5</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Increased hunger</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="hunger" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="hunger" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="hunger" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="hunger" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="hunger" data-level="5">5</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step 3: Additional Symptoms -->
                        <div id="symptom-step-3" class="symptom-step-content hidden">
                            <h4 class="font-medium mb-3">Additional Symptoms</h4>
                            <div class="space-y-3">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Blurred vision</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="vision" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="vision" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="vision" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="vision" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="vision" data-level="5">5</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Slow healing wounds</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="healing" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="healing" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="healing" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="healing" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="healing" data-level="5">5</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm">Tingling in hands/feet</span>
                                    <div class="flex space-x-1">
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="tingling" data-level="1">1</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="tingling" data-level="2">2</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="tingling" data-level="3">3</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="tingling" data-level="4">4</button>
                                        <button class="symptom-btn w-8 h-8 rounded-full border-2 border-gray-300 text-xs hover:border-blue-500" data-symptom="tingling" data-level="5">5</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Navigation Buttons -->
                        <div class="flex justify-between mt-6">
                            <button id="symptom-prev-btn" onclick="previousSymptomStep()" class="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 hidden">Previous</button>
                            <div class="flex-1"></div>
                            <button id="symptom-next-btn" onclick="nextSymptomStep()" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Next</button>
                            <button id="symptom-complete-btn" onclick="completeSymptomAssessment()" class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 hidden">Complete Assessment</button>
                        </div>
                    </div>

                    <!-- Severity Scale Legend -->
                    <div class="mt-4 p-3 bg-gray-50 rounded-lg">
                        <div class="flex justify-between text-xs text-gray-600">
                            <span>1 - None</span>
                            <span>2 - Mild</span>
                            <span>3 - Moderate</span>
                            <span>4 - Severe</span>
                            <span>5 - Very Severe</span>
                        </div>
                    </div>
                </div>

                <!-- Enhanced Mood & Mental Health Tracker -->
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 flex items-center">
                        <i data-lucide="brain" class="h-5 w-5 mr-2"></i>
                        Mental Health Monitor
                    </h3>
                    <div class="space-y-6">
                        <!-- Overall Mood -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-3">Overall Mood Today</label>
                            <div class="grid grid-cols-5 gap-2">
                                <button class="mood-btn p-3 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center" data-mood="very-sad">
                                    <div class="text-2xl mb-1">😢</div>
                                    <div class="text-xs text-gray-600">Very Low</div>
                                </button>
                                <button class="mood-btn p-3 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center" data-mood="sad">
                                    <div class="text-2xl mb-1">😔</div>
                                    <div class="text-xs text-gray-600">Low</div>
                                </button>
                                <button class="mood-btn p-3 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center" data-mood="neutral">
                                    <div class="text-2xl mb-1">😐</div>
                                    <div class="text-xs text-gray-600">Neutral</div>
                                </button>
                                <button class="mood-btn p-3 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center" data-mood="happy">
                                    <div class="text-2xl mb-1">😊</div>
                                    <div class="text-xs text-gray-600">Good</div>
                                </button>
                                <button class="mood-btn p-3 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center" data-mood="very-happy">
                                    <div class="text-2xl mb-1">😄</div>
                                    <div class="text-xs text-gray-600">Excellent</div>
                                </button>
                            </div>
                        </div>

                        <!-- Energy Level -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Energy Level</label>
                            <input type="range" id="energy-level" min="1" max="10" value="5" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider">
                            <div class="flex justify-between text-xs text-gray-500 mt-1">
                                <span>Exhausted</span>
                                <span id="energy-value" class="font-medium text-blue-600">5</span>
                                <span>Energetic</span>
                            </div>
                        </div>

                        <!-- Stress Level -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Stress Level</label>
                            <input type="range" id="stress-level-tracker" min="1" max="10" value="5" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider">
                            <div class="flex justify-between text-xs text-gray-500 mt-1">
                                <span>Relaxed</span>
                                <span id="stress-value-tracker" class="font-medium text-orange-600">5</span>
                                <span>Very Stressed</span>
                            </div>
                        </div>

                        <!-- Sleep Quality -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Last Night's Sleep Quality</label>
                            <div class="grid grid-cols-4 gap-2">
                                <button class="sleep-btn p-2 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center text-xs" data-sleep="poor">
                                    <div class="text-lg mb-1">😴</div>
                                    <div>Poor</div>
                                </button>
                                <button class="sleep-btn p-2 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center text-xs" data-sleep="fair">
                                    <div class="text-lg mb-1">😪</div>
                                    <div>Fair</div>
                                </button>
                                <button class="sleep-btn p-2 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center text-xs" data-sleep="good">
                                    <div class="text-lg mb-1">😌</div>
                                    <div>Good</div>
                                </button>
                                <button class="sleep-btn p-2 rounded-lg border-2 border-gray-300 hover:border-blue-500 transition-colors text-center text-xs" data-sleep="excellent">
                                    <div class="text-lg mb-1">😊</div>
                                    <div>Excellent</div>
                                </button>
                            </div>
                        </div>

                        <!-- Quick Mental Health Check -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-3">Quick Mental Health Check</label>
                            <div class="space-y-2">
                                <div class="flex items-center">
                                    <input type="checkbox" id="anxiety-check" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                    <label for="anxiety-check" class="ml-2 text-sm text-gray-700">Feeling anxious or worried</label>
                                </div>
                                <div class="flex items-center">
                                    <input type="checkbox" id="overwhelmed-check" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                    <label for="overwhelmed-check" class="ml-2 text-sm text-gray-700">Feeling overwhelmed</label>
                                </div>
                                <div class="flex items-center">
                                    <input type="checkbox" id="motivated-check" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                    <label for="motivated-check" class="ml-2 text-sm text-gray-700">Feeling motivated and positive</label>
                                </div>
                            </div>
                        </div>

                        <!-- Mood Notes -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Additional Notes (Optional)</label>
                            <textarea id="mood-notes" rows="2" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm" placeholder="How are you feeling today? Any specific thoughts or concerns?"></textarea>
                        </div>
                    </div>
                    
                    <button onclick="saveMoodAssessment()" class="w-full mt-6 bg-gradient-to-r from-green-600 to-blue-600 text-white py-3 rounded-md hover:from-green-700 hover:to-blue-700 font-medium transition-all">Complete Mental Health Check</button>
                </div>
            </div>

            <!-- Health Tips -->
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h3 class="text-lg font-semibold mb-4 flex items-center">
                    <i data-lucide="book-open" class="h-5 w-5 mr-2"></i>
                    Daily Health Tips
                </h3>
                <div class="grid md:grid-cols-3 gap-4">
                    <div class="p-4 bg-blue-50 rounded-lg">
                        <h4 class="font-medium text-blue-900 mb-2">Hydration</h4>
                        <p class="text-sm text-blue-700">Drink at least 8 glasses of water daily to help regulate blood sugar and support kidney function.</p>
                    </div>
                    <div class="p-4 bg-green-50 rounded-lg">
                        <h4 class="font-medium text-green-900 mb-2">Exercise</h4>
                        <p class="text-sm text-green-700">A 10-minute walk after meals can help lower blood glucose levels by up to 30%.</p>
                    </div>
                    <div class="p-4 bg-purple-50 rounded-lg">
                        <h4 class="font-medium text-purple-900 mb-2">Sleep</h4>
                        <p class="text-sm text-purple-700">Aim for 7-9 hours of quality sleep to help maintain healthy insulin sensitivity.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Analysis Page -->
    <div id="analysis-page" class="page hidden">
        <div class="max-w-6xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-4">Health Risk Analysis</h1>
                <p class="text-gray-600">Comprehensive assessment based on your health profile</p>
            </div>

            <!-- Risk Score Display -->
            <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
                <div class="text-center">
                    <div id="risk-score-circle" class="risk-low w-32 h-32 rounded-full flex items-center justify-center mx-auto mb-4">
                        <div class="text-center">
                            <div id="risk-score-number" class="text-3xl font-bold text-white">2.1</div>
                            <div class="text-sm text-white">Risk Score</div>
                        </div>
                    </div>
                    <h2 id="risk-level-title" class="text-2xl font-bold text-green-600 mb-2">Low Risk</h2>
                    <p id="risk-description" class="text-gray-600 max-w-2xl mx-auto">Your current health profile indicates a low risk for developing diabetes. Continue maintaining your healthy lifestyle habits.</p>
                </div>
            </div>

            <!-- Risk Factors Breakdown -->
            <div class="grid md:grid-cols-2 gap-8 mb-8">
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-xl font-semibold mb-4 flex items-center">
                        <i data-lucide="trending-up" class="h-5 w-5 mr-2 text-red-500"></i>
                        Risk Factors
                    </h3>
                    <div class="space-y-4">
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Age Factor</span>
                            <div class="flex items-center">
                                <div class="w-24 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-yellow-500 h-2 rounded-full" style="width: 40%"></div>
                                </div>
                                <span class="text-sm font-medium">+1</span>
                            </div>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm">BMI</span>
                            <div class="flex items-center">
                                <div class="w-24 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-green-500 h-2 rounded-full" style="width: 20%"></div>
                                </div>
                                <span class="text-sm font-medium">+0</span>
                            </div>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Blood Pressure</span>
                            <div class="flex items-center">
                                <div class="w-24 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-green-500 h-2 rounded-full" style="width: 20%"></div>
                                </div>
                                <span class="text-sm font-medium">+0</span>
                            </div>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Family History</span>
                            <div class="flex items-center">
                                <div class="w-24 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-red-500 h-2 rounded-full" style="width: 60%"></div>
                                </div>
                                <span class="text-sm font-medium">+2</span>
                            </div>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Lifestyle</span>
                            <div class="flex items-center">
                                <div class="w-24 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-green-500 h-2 rounded-full" style="width: 30%"></div>
                                </div>
                                <span class="text-sm font-medium">+1</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-xl font-semibold mb-4 flex items-center">
                        <i data-lucide="trending-down" class="h-5 w-5 mr-2 text-green-500"></i>
                        Protective Factors
                    </h3>
                    <div class="space-y-4">
                        <div class="flex items-center p-3 bg-green-50 rounded-lg">
                            <i data-lucide="check-circle" class="h-5 w-5 text-green-600 mr-3"></i>
                            <span class="text-sm">Regular exercise routine</span>
                        </div>
                        <div class="flex items-center p-3 bg-green-50 rounded-lg">
                            <i data-lucide="check-circle" class="h-5 w-5 text-green-600 mr-3"></i>
                            <span class="text-sm">Healthy BMI range</span>
                        </div>
                        <div class="flex items-center p-3 bg-green-50 rounded-lg">
                            <i data-lucide="check-circle" class="h-5 w-5 text-green-600 mr-3"></i>
                            <span class="text-sm">Good sleep quality</span>
                        </div>
                        <div class="flex items-center p-3 bg-green-50 rounded-lg">
                            <i data-lucide="check-circle" class="h-5 w-5 text-green-600 mr-3"></i>
                            <span class="text-sm">Non-smoker status</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Personalized Recommendations -->
            <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
                <h3 class="text-xl font-semibold mb-6 flex items-center">
                    <i data-lucide="target" class="h-5 w-5 mr-2 text-blue-500"></i>
                    Personalized Action Plan
                </h3>
                <div class="grid md:grid-cols-3 gap-6">
                    <div class="p-4 border-l-4 border-blue-500 bg-blue-50">
                        <h4 class="font-semibold text-blue-900 mb-2">Immediate Actions</h4>
                        <ul class="text-sm text-blue-800 space-y-1">
                            <li>• Continue current exercise routine</li>
                            <li>• Monitor blood glucose weekly</li>
                            <li>• Maintain healthy weight</li>
                        </ul>
                    </div>
                    <div class="p-4 border-l-4 border-yellow-500 bg-yellow-50">
                        <h4 class="font-semibold text-yellow-900 mb-2">Short-term Goals (1-3 months)</h4>
                        <ul class="text-sm text-yellow-800 space-y-1">
                            <li>• Reduce stress levels through meditation</li>
                            <li>• Increase fiber intake to 25g daily</li>
                            <li>• Schedule annual health checkup</li>
                        </ul>
                    </div>
                    <div class="p-4 border-l-4 border-green-500 bg-green-50">
                        <h4 class="font-semibold text-green-900 mb-2">Long-term Prevention</h4>
                        <ul class="text-sm text-green-800 space-y-1">
                            <li>• Maintain active lifestyle</li>
                            <li>• Regular health screenings</li>
                            <li>• Family health education</li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- PDF Report Generation -->
            <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-xl font-semibold mb-2">Complete Health Report</h3>
                        <p class="text-gray-600">Download a comprehensive PDF report to share with your healthcare provider</p>
                    </div>
                    <button onclick="generatePDFReport()" class="bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 flex items-center">
                        <i data-lucide="download" class="h-5 w-5 mr-2"></i>
                        Download Report
                    </button>
                </div>
            </div>

            <!-- Medical Disclaimer -->
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-lg">
                <div class="flex">
                    <i data-lucide="alert-triangle" class="h-5 w-5 text-yellow-400 mr-3 mt-0.5"></i>
                    <div>
                        <h4 class="text-sm font-medium text-yellow-800">Medical Disclaimer</h4>
                        <p class="text-sm text-yellow-700 mt-1">This assessment is for informational purposes only and should not replace professional medical advice. Please consult with your healthcare provider for proper diagnosis and treatment recommendations.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Page -->
    <div id="profile-page" class="page hidden">
        <div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <div class="bg-white rounded-lg shadow-lg overflow-hidden">
                <!-- Profile Header -->
                <div class="bg-gradient-to-r from-blue-600 to-purple-600 px-6 py-8">
                    <div class="flex items-center">
                        <div class="w-20 h-20 bg-white rounded-full flex items-center justify-center mr-6">
                            <i data-lucide="user" class="h-10 w-10 text-blue-600"></i>
                        </div>
                        <div class="text-white">
                            <h1 class="text-2xl font-bold" id="profile-username">User Profile</h1>
                            <p class="text-blue-100">Member since 2024</p>
                            <div class="flex items-center mt-2">
                                <div class="flex items-center mr-4">
                                    <i data-lucide="shield-check" class="h-4 w-4 mr-1"></i>
                                    <span class="text-sm">Verified Account</span>
                                </div>
                                <div class="flex items-center">
                                    <i data-lucide="calendar" class="h-4 w-4 mr-1"></i>
                                    <span class="text-sm">Last login: Today</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Profile Content -->
                <div class="p-6">
                    <!-- Account Information -->
                    <div class="mb-8">
                        <h2 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="settings" class="h-5 w-5 mr-2"></i>
                            Account Information
                        </h2>
                        <div class="grid md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Username</label>
                                <input type="text" id="profile-username-input" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="user123">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
                                <input type="email" id="profile-email-input" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="user@example.com">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                                <input type="text" id="profile-fullname-input" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="John Doe">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                                <input type="tel" id="profile-phone-input" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="+1 (555) 123-4567">
                            </div>
                        </div>
                    </div>

                    <!-- Health Profile Summary -->
                    <div class="mb-8">
                        <h2 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="heart" class="h-5 w-5 mr-2"></i>
                            Health Profile Summary
                        </h2>
                        <div class="grid md:grid-cols-3 gap-4">
                            <div class="bg-gray-50 p-4 rounded-lg">
                                <div class="text-sm text-gray-600">Current Risk Level</div>
                                <div class="text-lg font-semibold text-green-600">Low Risk</div>
                                <div class="text-xs text-gray-500">Last updated: Today</div>
                            </div>
                            <div class="bg-gray-50 p-4 rounded-lg">
                                <div class="text-sm text-gray-600">Profile Completeness</div>
                                <div class="text-lg font-semibold text-blue-600">95%</div>
                                <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                                    <div class="bg-blue-600 h-2 rounded-full" style="width: 95%"></div>
                                </div>
                            </div>
                            <div class="bg-gray-50 p-4 rounded-lg">
                                <div class="text-sm text-gray-600">Data Points Logged</div>
                                <div class="text-lg font-semibold text-purple-600">247</div>
                                <div class="text-xs text-gray-500">Symptoms, mood, vitals</div>
                            </div>
                        </div>
                    </div>

                    <!-- Privacy & Security -->
                    <div class="mb-8">
                        <h2 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="shield" class="h-5 w-5 mr-2"></i>
                            Privacy & Security
                        </h2>
                        <div class="space-y-4">
                            <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                <div>
                                    <h3 class="font-medium">Two-Factor Authentication</h3>
                                    <p class="text-sm text-gray-600">Add an extra layer of security to your account</p>
                                </div>
                                <button class="bg-blue-600 text-white px-4 py-2 rounded-md text-sm hover:bg-blue-700">Enable</button>
                            </div>
                            <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                <div>
                                    <h3 class="font-medium">Data Export</h3>
                                    <p class="text-sm text-gray-600">Download all your health data</p>
                                </div>
                                <button onclick="exportUserData()" class="bg-green-600 text-white px-4 py-2 rounded-md text-sm hover:bg-green-700">Export Data</button>
                            </div>
                            <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                <div>
                                    <h3 class="font-medium">Change Password</h3>
                                    <p class="text-sm text-gray-600">Update your account password</p>
                                </div>
                                <button class="bg-gray-600 text-white px-4 py-2 rounded-md text-sm hover:bg-gray-700">Change</button>
                            </div>
                        </div>
                    </div>

                    <!-- Notification Preferences -->
                    <div class="mb-8">
                        <h2 class="text-xl font-semibold mb-4 flex items-center">
                            <i data-lucide="bell" class="h-5 w-5 mr-2"></i>
                            Notification Preferences
                        </h2>
                        <div class="space-y-3">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="font-medium">Health Reminders</h3>
                                    <p class="text-sm text-gray-600">Daily reminders to log symptoms and vitals</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" class="sr-only peer" checked>
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="font-medium">Risk Alerts</h3>
                                    <p class="text-sm text-gray-600">Notifications when risk levels change</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" class="sr-only peer" checked>
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="font-medium">Weekly Reports</h3>
                                    <p class="text-sm text-gray-600">Summary of your health progress</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" class="sr-only peer">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex flex-wrap gap-4">
                        <button onclick="saveProfileChanges()" class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 font-medium">Save Changes</button>
                        <button onclick="showPage('profile-creation')" class="bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 font-medium">Update Health Profile</button>
                        <button class="bg-red-600 text-white px-6 py-2 rounded-md hover:bg-red-700 font-medium">Delete Account</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 404 Page -->
    <div id="404-page" class="page hidden">
        <div class="min-h-screen flex items-center justify-center bg-gray-50">
            <div class="text-center">
                <div class="mb-8">
                    <i data-lucide="search-x" class="h-24 w-24 text-gray-400 mx-auto mb-4"></i>
                    <h1 class="text-6xl font-bold text-gray-900 mb-4">404</h1>
                    <h2 class="text-2xl font-semibold text-gray-700 mb-4">Page Not Found</h2>
                    <p class="text-gray-600 mb-8 max-w-md mx-auto">Sorry, we couldn't find the page you're looking for. The page might have been moved, deleted, or you entered the wrong URL.</p>
                </div>
                <div class="space-x-4">
                    <button onclick="showPage('home')" class="bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700">Go Home</button>
                    <button onclick="history.back()" class="bg-gray-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-gray-700">Go Back</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Progress Page -->
    <div id="progress-page" class="page hidden">
        <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-4">Health Progress Tracking</h1>
                <p class="text-gray-600">Monitor your health trends and improvements over time</p>
            </div>

            <!-- Metrics Tabs -->
            <div class="bg-white rounded-lg shadow-lg mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6">
                        <button class="progress-tab py-4 px-1 border-b-2 border-blue-500 font-medium text-sm text-blue-600" data-tab="glucose">Blood Glucose</button>
                        <button class="progress-tab py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700" data-tab="pressure">Blood Pressure</button>
                        <button class="progress-tab py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700" data-tab="weight">Weight & BMI</button>
                        <button class="progress-tab py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700" data-tab="risk">Risk Score</button>
                    </nav>
                </div>

                <!-- Chart Container -->
                <div class="p-6">
                    <div id="glucose-chart" class="chart-container">
                        <canvas id="glucoseChart" width="800" height="400"></canvas>
                    </div>
                    <div id="pressure-chart" class="chart-container hidden">
                        <canvas id="pressureChart" width="800" height="400"></canvas>
                    </div>
                    <div id="weight-chart" class="chart-container hidden">
                        <canvas id="weightChart" width="800" height="400"></canvas>
                    </div>
                    <div id="risk-chart" class="chart-container hidden">
                        <canvas id="riskChart" width="800" height="400"></canvas>
                    </div>
                </div>
            </div>

            <!-- Progress Summary -->
            <div class="grid md:grid-cols-3 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 flex items-center">
                        <i data-lucide="trending-up" class="h-5 w-5 mr-2 text-green-500"></i>
                        Improvements
                    </h3>
                    <div class="space-y-3">
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Average Blood Glucose</span>
                            <span class="text-sm font-medium text-green-600">↓ 8mg/dL</span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Weight Loss</span>
                            <span class="text-sm font-medium text-green-600">↓ 3.2kg</span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm">Exercise Frequency</span>
                            <span class="text-sm font-medium text-green-600">↑ 2 days/week</span>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 flex items-center">
                        <i data-lucide="target" class="h-5 w-5 mr-2 text-blue-500"></i>
                        Goals Progress
                    </h3>
                    <div class="space-y-4">
                        <div>
                            <div class="flex justify-between text-sm mb-1">
                                <span>Weight Goal</span>
                                <span>75%</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-blue-600 h-2 rounded-full" style="width: 75%"></div>
                            </div>
                        </div>
                        <div>
                            <div class="flex justify-between text-sm mb-1">
                                <span>Exercise Goal</span>
                                <span>90%</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-green-600 h-2 rounded-full" style="width: 90%"></div>
                            </div>
                        </div>
                        <div>
                            <div class="flex justify-between text-sm mb-1">
                                <span>Glucose Control</span>
                                <span>85%</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-purple-600 h-2 rounded-full" style="width: 85%"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 flex items-center">
                        <i data-lucide="calendar" class="h-5 w-5 mr-2 text-purple-500"></i>
                        Recent Milestones
                    </h3>
                    <div class="space-y-3">
                        <div class="flex items-center p-2 bg-green-50 rounded-lg">
                            <i data-lucide="award" class="h-4 w-4 text-green-600 mr-2"></i>
                            <span class="text-sm">30-day exercise streak</span>
                        </div>
                        <div class="flex items-center p-2 bg-blue-50 rounded-lg">
                            <i data-lucide="star" class="h-4 w-4 text-blue-600 mr-2"></i>
                            <span class="text-sm">Glucose in target range</span>
                        </div>
                        <div class="flex items-center p-2 bg-purple-50 rounded-lg">
                            <i data-lucide="heart" class="h-4 w-4 text-purple-600 mr-2"></i>
                            <span class="text-sm">Improved sleep quality</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Data Interpretation Guide -->
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h3 class="text-xl font-semibold mb-4 flex items-center">
                    <i data-lucide="info" class="h-5 w-5 mr-2 text-blue-500"></i>
                    Understanding Your Data
                </h3>
                <div class="grid md:grid-cols-2 gap-6">
                    <div>
                        <h4 class="font-medium mb-2">Blood Glucose Ranges</h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span>Normal (fasting):</span>
                                <span class="text-green-600">70-99 mg/dL</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Prediabetes:</span>
                                <span class="text-yellow-600">100-125 mg/dL</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Diabetes:</span>
                                <span class="text-red-600">126+ mg/dL</span>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h4 class="font-medium mb-2">Blood Pressure Categories</h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span>Normal:</span>
                                <span class="text-green-600">&lt;120/80 mmHg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Elevated:</span>
                                <span class="text-yellow-600">120-129/&lt;80</span>
                            </div>
                            <div class="flex justify-between">
                                <span>High:</span>
                                <span class="text-red-600">≥130/80 mmHg</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        // Global state
        let currentUser = null;
        let healthData = {
            riskScore: null,
            riskLevel: null,
            bloodSugar: null,
            bloodPressure: { systolic: null, diastolic: null },
            bmi: null,
            symptoms: {},
            mood: null,
            energy: 5,
            profileCompleted: false
        };
        
        // Health data entries storage
        let healthDataEntries = [];

        // Navigation
        function showPage(pageId) {
            // Check if user is logged in for protected pages
            const protectedPages = ['dashboard', 'health-data', 'analysis', 'progress', 'profile', 'profile-creation'];
            if (protectedPages.includes(pageId) && !currentUser) {
                alert('Please log in to access this page.');
                showPage('auth');
                return;
            }
            
            // Check if profile is completed for certain pages
            const profileRequiredPages = ['analysis', 'progress'];
            if (profileRequiredPages.includes(pageId) && currentUser && !healthData.profileCompleted) {
                if (pageId === 'analysis') {
                    // Allow access to analysis page but show empty state
                } else {
                    alert('Please complete your health profile first to access detailed analytics.');
                    showPage('profile-creation');
                    return;
                }
            }
            
            // Hide all pages
            document.querySelectorAll('.page').forEach(page => {
                page.classList.add('hidden');
            });
            
            // Show selected page
            const targetPage = document.getElementById(pageId + '-page');
            if (targetPage) {
                targetPage.classList.remove('hidden');
                
                // Initialize page-specific functionality
                if (pageId === 'progress') {
                    if (healthData.profileCompleted && healthDataEntries.length > 0) {
                        clearExistingCharts();
                        initializeCharts();
                    } else {
                        showEmptyProgressState();
                    }
                } else if (pageId === 'dashboard') {
                    updateDashboard();
                } else if (pageId === 'analysis') {
                    updateAnalysis();
                } else if (pageId === 'health-data') {
                    updateHealthDataStats();
                    populateHealthDataTable();
                }
            }
        }

        // Authentication
        document.getElementById('login-tab').addEventListener('click', function() {
            document.getElementById('register-fields').classList.add('hidden');
            document.getElementById('login-tab').classList.add('border-blue-600', 'text-blue-600');
            document.getElementById('login-tab').classList.remove('border-gray-200', 'text-gray-500');
            document.getElementById('register-tab').classList.remove('border-blue-600', 'text-blue-600');
            document.getElementById('register-tab').classList.add('border-gray-200', 'text-gray-500');
        });

        document.getElementById('register-tab').addEventListener('click', function() {
            document.getElementById('register-fields').classList.remove('hidden');
            document.getElementById('register-tab').classList.add('border-blue-600', 'text-blue-600');
            document.getElementById('register-tab').classList.remove('border-gray-200', 'text-gray-500');
            document.getElementById('login-tab').classList.remove('border-blue-600', 'text-blue-600');
            document.getElementById('login-tab').classList.add('border-gray-200', 'text-gray-500');
        });

        document.getElementById('auth-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const isRegistering = !document.getElementById('register-fields').classList.contains('hidden');
            
            if (username) {
                currentUser = { username: username };
                document.getElementById('user-name').textContent = username;
                
                // If registering, prompt to fill health profile
                if (isRegistering) {
                    alert('Welcome to GlucoVigil! Please complete your health profile to get personalized risk assessment and recommendations.');
                    showPage('profile-creation');
                } else {
                    // For existing users, go to dashboard
                    showPage('dashboard');
                }
            }
        });

        // Profile Creation
        document.getElementById('profile-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Validate required fields
            const requiredFields = ['age', 'gender', 'height', 'weight', 'exerciseLevel', 'dietQuality', 'smokingStatus', 'alcoholConsumption', 'sleepQuality'];
            let isValid = true;
            
            for (let field of requiredFields) {
                const element = document.getElementById(field);
                if (!element.value.trim()) {
                    element.classList.add('border-red-500');
                    isValid = false;
                } else {
                    element.classList.remove('border-red-500');
                }
            }
            
            if (!isValid) {
                alert('Please fill in all required fields to complete your health profile.');
                return;
            }
            
            // Calculate risk score based on form data
            const formData = new FormData(e.target);
            const riskScore = calculateRiskScore(formData);
            
            // Update health data
            healthData.riskScore = riskScore.score;
            healthData.riskLevel = riskScore.level;
            healthData.profileCompleted = true;
            
            // Update BMI
            const height = parseFloat(document.getElementById('height').value) / 100; // Convert to meters
            const weight = parseFloat(document.getElementById('weight').value);
            healthData.bmi = (weight / (height * height)).toFixed(1);
            
            // Update blood pressure and glucose if provided
            const systolic = document.getElementById('bloodPressureSys').value;
            const diastolic = document.getElementById('bloodPressureDia').value;
            const glucose = document.getElementById('fastingGlucose').value;
            
            if (systolic && diastolic) {
                healthData.bloodPressure = { systolic: parseInt(systolic), diastolic: parseInt(diastolic) };
            } else {
                // Set default values if not provided
                healthData.bloodPressure = { systolic: 120, diastolic: 80 };
            }
            
            if (glucose) {
                healthData.bloodSugar = parseInt(glucose);
            } else {
                // Set default value if not provided
                healthData.bloodSugar = 95;
            }
            
            // Store profile completion timestamp
            healthData.profileCompletedAt = new Date().toISOString();
            
            // Show success message with next steps
            alert('🎉 Health profile completed successfully!\n\n✅ Your personalized risk assessment is now available\n✅ You can now access all platform features\n\n📊 Next steps:\n• View your risk analysis\n• Start adding daily health data\n• Track your progress over time');
            
            // Navigate to analysis page to show results
            showPage('analysis');
        });

        // Progress tracking for profile form
        document.querySelectorAll('.form-input').forEach(input => {
            input.addEventListener('input', updateProgress);
        });

        function updateProgress() {
            const inputs = document.querySelectorAll('.form-input');
            const filledInputs = Array.from(inputs).filter(input => input.value.trim() !== '');
            const progress = (filledInputs.length / inputs.length) * 100;
            
            document.getElementById('progress-bar').style.width = progress + '%';
            document.getElementById('progress-text').textContent = Math.round(progress) + '%';
        }

        // Stress level slider
        document.getElementById('stressLevel').addEventListener('input', function() {
            document.getElementById('stress-value').textContent = this.value;
        });

        // Energy level slider
        document.getElementById('energy-level').addEventListener('input', function() {
            document.getElementById('energy-value').textContent = this.value;
        });

        // Risk calculation algorithm
        function calculateRiskScore(formData) {
            let score = 0;
            
            // Age factor
            const age = parseInt(document.getElementById('age').value);
            if (age > 65) score += 2;
            else if (age > 45) score += 1;
            
            // BMI factor
            const height = parseFloat(document.getElementById('height').value) / 100;
            const weight = parseFloat(document.getElementById('weight').value);
            const bmi = weight / (height * height);
            if (bmi > 30) score += 2;
            else if (bmi > 25) score += 1;
            
            // Fasting glucose
            const glucose = parseFloat(document.getElementById('fastingGlucose').value);
            if (glucose > 126) score += 3;
            else if (glucose > 100) score += 1;
            
            // Blood pressure
            const systolic = parseInt(document.getElementById('bloodPressureSys').value);
            if (systolic > 140) score += 1;
            
            // Family history
            if (document.getElementById('familyDiabetes').checked) score += 3;
            if (document.getElementById('familyHeartDisease').checked) score += 1;
            if (document.getElementById('familyHypertension').checked) score += 1;
            
            // Lifestyle factors
            const exercise = document.getElementById('exerciseLevel').value;
            if (exercise === 'sedentary') score += 2;
            else if (exercise === 'light') score += 1;
            
            const diet = document.getElementById('dietQuality').value;
            if (diet === 'poor') score += 2;
            else if (diet === 'fair') score += 1;
            
            const smoking = document.getElementById('smokingStatus').value;
            if (smoking === 'current') score += 2;
            else if (smoking === 'former') score += 1;
            
            const alcohol = document.getElementById('alcoholConsumption').value;
            if (alcohol === 'heavy') score += 2;
            else if (alcohol === 'moderate') score += 1;
            
            // Stress and sleep
            const stress = parseInt(document.getElementById('stressLevel').value);
            if (stress > 7) score += 2;
            else if (stress > 5) score += 1;
            
            const sleep = document.getElementById('sleepQuality').value;
            if (sleep === 'poor') score += 2;
            else if (sleep === 'fair') score += 1;
            
            // Normalize score (max possible is around 25-30)
            const normalizedScore = Math.min(score / 4, 10);
            
            let level;
            if (normalizedScore <= 2) level = 'low';
            else if (normalizedScore <= 3.5) level = 'moderate';
            else level = 'high';
            
            return { score: normalizedScore.toFixed(1), level: level };
        }

        // Dashboard functionality
        function updateDashboard() {
            // Check if profile is completed
            if (!healthData.profileCompleted) {
                // Update welcome message for new users
                document.getElementById('welcome-subtitle').textContent = 'Complete your health profile to get started with personalized analytics';
                
                // Show empty state for new users
                document.getElementById('risk-level-text').textContent = 'Not Available';
                document.getElementById('risk-level-text').className = 'text-2xl font-bold text-gray-400';
                document.getElementById('risk-level-icon').className = 'bg-gray-300 w-12 h-12 rounded-full flex items-center justify-center';
                document.getElementById('risk-level-icon').innerHTML = '<i data-lucide="help-circle" class="h-6 w-6 text-white"></i>';
                
                document.getElementById('blood-sugar-value').textContent = 'No data';
                document.getElementById('blood-pressure-value').textContent = 'No data';
                document.getElementById('bmi-value').textContent = 'No data';
                
                // Update recommendations for new users
                const recommendationsList = document.getElementById('recommendations-list');
                recommendationsList.innerHTML = `
                    <div class="flex items-start p-3 bg-blue-50 rounded-lg">
                        <i data-lucide="user-plus" class="h-5 w-5 text-blue-600 mr-3 mt-0.5"></i>
                        <p class="text-sm">Welcome! Complete your health profile to get personalized risk assessment and recommendations.</p>
                    </div>
                    <div class="flex items-start p-3 bg-green-50 rounded-lg">
                        <i data-lucide="clipboard-list" class="h-5 w-5 text-green-600 mr-3 mt-0.5"></i>
                        <p class="text-sm">Fill out the comprehensive health questionnaire to unlock advanced analytics.</p>
                    </div>
                    <div class="flex items-start p-3 bg-purple-50 rounded-lg">
                        <i data-lucide="activity" class="h-5 w-5 text-purple-600 mr-3 mt-0.5"></i>
                        <p class="text-sm">Start tracking your symptoms and mood to build your health timeline.</p>
                    </div>
                `;
                
                lucide.createIcons();
                return;
            }
            
            // Update welcome message for users with completed profiles
            document.getElementById('welcome-subtitle').textContent = "Here's your health overview for today";
            
            // Update risk level display for users with completed profiles
            const riskElement = document.getElementById('risk-level-text');
            const riskIcon = document.getElementById('risk-level-icon');
            
            riskElement.textContent = healthData.riskLevel.charAt(0).toUpperCase() + healthData.riskLevel.slice(1);
            riskIcon.className = `risk-${healthData.riskLevel} w-12 h-12 rounded-full flex items-center justify-center`;
            
            if (healthData.riskLevel === 'low') {
                riskElement.className = 'text-2xl font-bold text-green-600';
            } else if (healthData.riskLevel === 'moderate') {
                riskElement.className = 'text-2xl font-bold text-yellow-600';
            } else {
                riskElement.className = 'text-2xl font-bold text-red-600';
            }
            
            // Update other metrics
            document.getElementById('blood-sugar-value').textContent = healthData.bloodSugar + ' mg/dL';
            document.getElementById('blood-pressure-value').textContent = `${healthData.bloodPressure.systolic}/${healthData.bloodPressure.diastolic}`;
            document.getElementById('bmi-value').textContent = healthData.bmi;
        }

        // Analysis page functionality
        function updateAnalysis() {
            // Check if profile is completed
            if (!healthData.profileCompleted) {
                // Show message for users who haven't completed their profile
                const circle = document.getElementById('risk-score-circle');
                const scoreNumber = document.getElementById('risk-score-number');
                const title = document.getElementById('risk-level-title');
                const description = document.getElementById('risk-description');
                
                circle.className = 'bg-gray-300 w-32 h-32 rounded-full flex items-center justify-center mx-auto mb-4';
                scoreNumber.textContent = '?';
                title.textContent = 'Complete Your Profile';
                title.className = 'text-2xl font-bold text-gray-600 mb-2';
                description.textContent = 'Please complete your health profile first to get your personalized risk assessment and recommendations.';
                
                // Add a button to go to profile creation
                const analysisContainer = document.querySelector('#analysis-page .max-w-6xl');
                const existingButton = document.getElementById('complete-profile-btn');
                if (!existingButton) {
                    const buttonDiv = document.createElement('div');
                    buttonDiv.className = 'text-center mt-8';
                    buttonDiv.innerHTML = `
                        <button id="complete-profile-btn" onclick="showPage('profile-creation')" class="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                            Complete Health Profile
                        </button>
                    `;
                    analysisContainer.insertBefore(buttonDiv, analysisContainer.children[2]);
                }
                return;
            }
            
            // Remove the complete profile button if it exists
            const existingButton = document.getElementById('complete-profile-btn');
            if (existingButton) {
                existingButton.parentElement.remove();
            }
            
            const riskScore = parseFloat(healthData.riskScore);
            const riskLevel = healthData.riskLevel;
            
            // Update risk score circle
            const circle = document.getElementById('risk-score-circle');
            const scoreNumber = document.getElementById('risk-score-number');
            const title = document.getElementById('risk-level-title');
            const description = document.getElementById('risk-description');
            
            circle.className = `risk-${riskLevel} w-32 h-32 rounded-full flex items-center justify-center mx-auto mb-4`;
            scoreNumber.textContent = riskScore;
            
            if (riskLevel === 'low') {
                title.textContent = 'Low Risk';
                title.className = 'text-2xl font-bold text-green-600 mb-2';
                description.textContent = 'Your current health profile indicates a low risk for developing diabetes. Continue maintaining your healthy lifestyle habits.';
            } else if (riskLevel === 'moderate') {
                title.textContent = 'Moderate Risk';
                title.className = 'text-2xl font-bold text-yellow-600 mb-2';
                description.textContent = 'Your health profile shows some risk factors for diabetes. Consider implementing the recommended lifestyle changes to reduce your risk.';
            } else {
                title.textContent = 'High Risk';
                title.className = 'text-2xl font-bold text-red-600 mb-2';
                description.textContent = 'Your health profile indicates a higher risk for developing diabetes. We strongly recommend consulting with a healthcare provider and implementing immediate lifestyle changes.';
            }
        }

        // Advanced Symptom Wizard
        let currentSymptomStep = 1;
        let symptomWizardData = {};

        // Symptom tracking
        document.querySelectorAll('.symptom-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const symptomName = this.dataset.symptom;
                const level = parseInt(this.dataset.level);
                
                // Clear previous selections for this symptom
                document.querySelectorAll(`[data-symptom="${symptomName}"]`).forEach(b => {
                    b.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
                    b.classList.add('border-gray-300');
                });
                
                // Highlight selected button
                this.classList.add('bg-blue-600', 'text-white', 'border-blue-600');
                this.classList.remove('border-gray-300');
                
                // Store symptom data
                symptomWizardData[symptomName] = level;
            });
        });

        function nextSymptomStep() {
            if (currentSymptomStep < 3) {
                // Hide current step
                document.getElementById(`symptom-step-${currentSymptomStep}`).classList.add('hidden');
                
                // Update step indicator
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.remove('bg-blue-600', 'text-white');
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.add('bg-green-600', 'text-white');
                
                currentSymptomStep++;
                
                // Show next step
                document.getElementById(`symptom-step-${currentSymptomStep}`).classList.remove('hidden');
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.add('bg-blue-600', 'text-white');
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.remove('bg-gray-200', 'text-gray-600');
                
                // Update step indicator text
                document.getElementById('step-indicator').textContent = `Step ${currentSymptomStep} of 3`;
                
                // Show/hide navigation buttons
                document.getElementById('symptom-prev-btn').classList.remove('hidden');
                
                if (currentSymptomStep === 3) {
                    document.getElementById('symptom-next-btn').classList.add('hidden');
                    document.getElementById('symptom-complete-btn').classList.remove('hidden');
                }
            }
        }

        function previousSymptomStep() {
            if (currentSymptomStep > 1) {
                // Hide current step
                document.getElementById(`symptom-step-${currentSymptomStep}`).classList.add('hidden');
                
                // Update step indicator
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.remove('bg-blue-600', 'text-white');
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.add('bg-gray-200', 'text-gray-600');
                
                currentSymptomStep--;
                
                // Show previous step
                document.getElementById(`symptom-step-${currentSymptomStep}`).classList.remove('hidden');
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.add('bg-blue-600', 'text-white');
                document.querySelectorAll('.symptom-step')[currentSymptomStep - 1].classList.remove('bg-green-600');
                
                // Update step indicator text
                document.getElementById('step-indicator').textContent = `Step ${currentSymptomStep} of 3`;
                
                // Show/hide navigation buttons
                if (currentSymptomStep === 1) {
                    document.getElementById('symptom-prev-btn').classList.add('hidden');
                }
                
                document.getElementById('symptom-next-btn').classList.remove('hidden');
                document.getElementById('symptom-complete-btn').classList.add('hidden');
            }
        }

        function completeSymptomAssessment() {
            const symptomCount = Object.keys(symptomWizardData).length;
            
            if (symptomCount > 0) {
                // Calculate symptom severity score
                const totalScore = Object.values(symptomWizardData).reduce((sum, score) => sum + score, 0);
                const averageScore = (totalScore / symptomCount).toFixed(1);
                
                let severityLevel = 'Mild';
                if (averageScore >= 4) severityLevel = 'Severe';
                else if (averageScore >= 3) severityLevel = 'Moderate';
                
                // Store in health data
                healthData.symptoms = { ...symptomWizardData };
                healthData.symptomSeverity = { average: averageScore, level: severityLevel };
                
                alert(`Symptom assessment completed!\nAverage severity: ${averageScore}/5 (${severityLevel})\nSymptoms logged: ${symptomCount}`);
                
                // Reset wizard
                resetSymptomWizard();
                
                // Update recommendations based on symptoms
                updateSymptomRecommendations();
            } else {
                alert('Please rate at least one symptom before completing the assessment.');
            }
        }

        function resetSymptomWizard() {
            currentSymptomStep = 1;
            symptomWizardData = {};
            
            // Reset UI
            document.querySelectorAll('.symptom-step-content').forEach((step, index) => {
                if (index === 0) step.classList.remove('hidden');
                else step.classList.add('hidden');
            });
            
            document.querySelectorAll('.symptom-step').forEach((step, index) => {
                step.classList.remove('bg-blue-600', 'bg-green-600', 'text-white');
                if (index === 0) {
                    step.classList.add('bg-blue-600', 'text-white');
                } else {
                    step.classList.add('bg-gray-200', 'text-gray-600');
                }
            });
            
            document.getElementById('step-indicator').textContent = 'Step 1 of 3';
            document.getElementById('symptom-prev-btn').classList.add('hidden');
            document.getElementById('symptom-next-btn').classList.remove('hidden');
            document.getElementById('symptom-complete-btn').classList.add('hidden');
            
            // Reset button selections
            document.querySelectorAll('.symptom-btn').forEach(btn => {
                btn.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
                btn.classList.add('border-gray-300');
            });
        }

        function updateSymptomRecommendations() {
            // This would update the recommendations based on symptom data
            // For now, we'll just log the data
            console.log('Symptom data updated:', healthData.symptoms);
        }

        // Enhanced Mood & Mental Health Tracking
        let mentalHealthData = {
            mood: null,
            energy: 5,
            stress: 5,
            sleep: null,
            mentalHealthFlags: [],
            notes: ''
        };

        // Mood tracking
        document.querySelectorAll('.mood-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Clear previous selections
                document.querySelectorAll('.mood-btn').forEach(b => {
                    b.classList.remove('border-blue-600', 'bg-blue-50');
                    b.classList.add('border-gray-300');
                });
                
                // Highlight selected mood
                this.classList.add('border-blue-600', 'bg-blue-50');
                this.classList.remove('border-gray-300');
                
                mentalHealthData.mood = this.dataset.mood;
            });
        });

        // Sleep quality tracking
        document.querySelectorAll('.sleep-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Clear previous selections
                document.querySelectorAll('.sleep-btn').forEach(b => {
                    b.classList.remove('border-blue-600', 'bg-blue-50');
                    b.classList.add('border-gray-300');
                });
                
                // Highlight selected sleep quality
                this.classList.add('border-blue-600', 'bg-blue-50');
                this.classList.remove('border-gray-300');
                
                mentalHealthData.sleep = this.dataset.sleep;
            });
        });

        // Energy and stress level sliders
        document.getElementById('energy-level').addEventListener('input', function() {
            document.getElementById('energy-value').textContent = this.value;
            mentalHealthData.energy = parseInt(this.value);
        });

        document.getElementById('stress-level-tracker').addEventListener('input', function() {
            document.getElementById('stress-value-tracker').textContent = this.value;
            mentalHealthData.stress = parseInt(this.value);
        });

        function saveMoodAssessment() {
            // Collect mental health flags
            mentalHealthData.mentalHealthFlags = [];
            if (document.getElementById('anxiety-check').checked) {
                mentalHealthData.mentalHealthFlags.push('anxiety');
            }
            if (document.getElementById('overwhelmed-check').checked) {
                mentalHealthData.mentalHealthFlags.push('overwhelmed');
            }
            if (document.getElementById('motivated-check').checked) {
                mentalHealthData.mentalHealthFlags.push('motivated');
            }

            // Get notes
            mentalHealthData.notes = document.getElementById('mood-notes').value;

            // Validate required fields
            if (!mentalHealthData.mood || !mentalHealthData.sleep) {
                alert('Please select your mood and sleep quality before completing the assessment.');
                return;
            }

            // Calculate mental health score
            let mentalHealthScore = 5; // Base score
            
            // Mood impact
            const moodScores = {
                'very-sad': -2,
                'sad': -1,
                'neutral': 0,
                'happy': 1,
                'very-happy': 2
            };
            mentalHealthScore += moodScores[mentalHealthData.mood] || 0;

            // Energy impact
            mentalHealthScore += (mentalHealthData.energy - 5) * 0.2;

            // Stress impact (inverse)
            mentalHealthScore -= (mentalHealthData.stress - 5) * 0.3;

            // Sleep impact
            const sleepScores = {
                'poor': -1.5,
                'fair': -0.5,
                'good': 0.5,
                'excellent': 1.5
            };
            mentalHealthScore += sleepScores[mentalHealthData.sleep] || 0;

            // Mental health flags impact
            if (mentalHealthData.mentalHealthFlags.includes('anxiety')) mentalHealthScore -= 1;
            if (mentalHealthData.mentalHealthFlags.includes('overwhelmed')) mentalHealthScore -= 1;
            if (mentalHealthData.mentalHealthFlags.includes('motivated')) mentalHealthScore += 1;

            // Normalize score (1-10)
            mentalHealthScore = Math.max(1, Math.min(10, mentalHealthScore));

            // Store in health data
            healthData.mentalHealth = {
                ...mentalHealthData,
                score: mentalHealthScore.toFixed(1),
                timestamp: new Date().toISOString()
            };

            // Determine mental health level
            let mentalHealthLevel = 'Good';
            if (mentalHealthScore < 4) mentalHealthLevel = 'Needs Attention';
            else if (mentalHealthScore < 6) mentalHealthLevel = 'Fair';
            else if (mentalHealthScore > 8) mentalHealthLevel = 'Excellent';

            alert(`Mental Health Assessment Completed!\n\nMental Health Score: ${mentalHealthScore.toFixed(1)}/10\nLevel: ${mentalHealthLevel}\n\nYour data has been saved and will help improve your personalized recommendations.`);

            // Reset form
            resetMentalHealthForm();

            // Update recommendations
            updateMentalHealthRecommendations();
        }

        function resetMentalHealthForm() {
            // Reset mood buttons
            document.querySelectorAll('.mood-btn, .sleep-btn').forEach(btn => {
                btn.classList.remove('border-blue-600', 'bg-blue-50');
                btn.classList.add('border-gray-300');
            });

            // Reset sliders
            document.getElementById('energy-level').value = 5;
            document.getElementById('energy-value').textContent = '5';
            document.getElementById('stress-level-tracker').value = 5;
            document.getElementById('stress-value-tracker').textContent = '5';

            // Reset checkboxes
            document.getElementById('anxiety-check').checked = false;
            document.getElementById('overwhelmed-check').checked = false;
            document.getElementById('motivated-check').checked = false;

            // Reset notes
            document.getElementById('mood-notes').value = '';

            // Reset data
            mentalHealthData = {
                mood: null,
                energy: 5,
                stress: 5,
                sleep: null,
                mentalHealthFlags: [],
                notes: ''
            };
        }

        function updateMentalHealthRecommendations() {
            // This would update recommendations based on mental health data
            console.log('Mental health data updated:', healthData.mentalHealth);
        }

        // Empty progress state for new users
        function showEmptyProgressState() {
            const progressContainer = document.querySelector('#progress-page .max-w-7xl');
            const message = healthData.profileCompleted ? 
                'Add health data entries to see your progress charts' : 
                'Complete your health profile and add health data to start tracking your progress';
            
            const buttonText = healthData.profileCompleted ? 
                'Add Health Data' : 
                'Complete Health Profile';
            
            const buttonAction = healthData.profileCompleted ? 
                'health-data' : 
                'profile-creation';
            
            progressContainer.innerHTML = `
                <div class="text-center mb-8">
                    <h1 class="text-3xl font-bold text-gray-900 mb-4">Health Progress Tracking</h1>
                    <p class="text-gray-600">${message}</p>
                </div>
                
                <div class="bg-white rounded-lg shadow-lg p-12 text-center">
                    <div class="mb-8">
                        <i data-lucide="bar-chart-3" class="h-24 w-24 text-gray-300 mx-auto mb-4"></i>
                        <h2 class="text-2xl font-semibold text-gray-700 mb-4">No Progress Data Available</h2>
                        <p class="text-gray-600 max-w-md mx-auto mb-8">
                            ${healthData.profileCompleted ? 
                                'You have completed your health profile! Now start adding daily health data entries to see your progress trends and analytics.' :
                                'To view your health trends and progress charts, you need to complete your health profile and add health data entries.'
                            }
                        </p>
                        <button onclick="showPage('${buttonAction}')" class="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                            ${buttonText}
                        </button>
                    </div>
                    
                    <div class="grid md:grid-cols-3 gap-6 mt-12">
                        <div class="p-6 bg-gray-50 rounded-lg">
                            <i data-lucide="activity" class="h-8 w-8 text-gray-400 mx-auto mb-3"></i>
                            <h3 class="font-semibold text-gray-700 mb-2">Health Metrics</h3>
                            <p class="text-sm text-gray-600">Track blood glucose, pressure, and BMI trends</p>
                        </div>
                        <div class="p-6 bg-gray-50 rounded-lg">
                            <i data-lucide="trending-up" class="h-8 w-8 text-gray-400 mx-auto mb-3"></i>
                            <h3 class="font-semibold text-gray-700 mb-2">Progress Analytics</h3>
                            <p class="text-sm text-gray-600">Visualize improvements and identify patterns</p>
                        </div>
                        <div class="p-6 bg-gray-50 rounded-lg">
                            <i data-lucide="target" class="h-8 w-8 text-gray-400 mx-auto mb-3"></i>
                            <h3 class="font-semibold text-gray-700 mb-2">Goal Tracking</h3>
                            <p class="text-sm text-gray-600">Monitor progress towards health objectives</p>
                        </div>
                    </div>
                </div>
            `;
            lucide.createIcons();
        }

        // Clear existing charts to prevent memory leaks
        function clearExistingCharts() {
            const chartIds = ['glucoseChart', 'pressureChart', 'weightChart', 'riskChart'];
            chartIds.forEach(id => {
                const canvas = document.getElementById(id);
                if (canvas) {
                    const existingChart = Chart.getChart(canvas);
                    if (existingChart) {
                        existingChart.destroy();
                    }
                }
            });
        }

        // Progress page charts
        function initializeCharts() {
            // Sample data for charts
            const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];
            
            // Glucose chart
            const glucoseCtx = document.getElementById('glucoseChart').getContext('2d');
            new Chart(glucoseCtx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Fasting Glucose (mg/dL)',
                        data: [105, 102, 98, 95, 93, 95],
                        borderColor: 'rgb(59, 130, 246)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: false,
                            min: 80,
                            max: 120
                        }
                    }
                }
            });
            
            // Blood pressure chart
            const pressureCtx = document.getElementById('pressureChart').getContext('2d');
            new Chart(pressureCtx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Systolic',
                        data: [135, 132, 128, 125, 122, 120],
                        borderColor: 'rgb(239, 68, 68)',
                        backgroundColor: 'rgba(239, 68, 68, 0.1)'
                    }, {
                        label: 'Diastolic',
                        data: [88, 85, 83, 82, 80, 80],
                        borderColor: 'rgb(34, 197, 94)',
                        backgroundColor: 'rgba(34, 197, 94, 0.1)'
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: false,
                            min: 70,
                            max: 150
                        }
                    }
                }
            });
            
            // Weight chart
            const weightCtx = document.getElementById('weightChart').getContext('2d');
            new Chart(weightCtx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Weight (kg)',
                        data: [78, 77.5, 76.8, 76.2, 75.8, 75.5],
                        borderColor: 'rgb(168, 85, 247)',
                        backgroundColor: 'rgba(168, 85, 247, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: false,
                            min: 70,
                            max: 85
                        }
                    }
                }
            });
            
            // Risk score chart
            const riskCtx = document.getElementById('riskChart').getContext('2d');
            new Chart(riskCtx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Risk Score',
                        data: [3.2, 2.9, 2.6, 2.4, 2.2, 2.1],
                        borderColor: 'rgb(245, 158, 11)',
                        backgroundColor: 'rgba(245, 158, 11, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 5
                        }
                    }
                }
            });
        }

        // Progress tab switching
        document.querySelectorAll('.progress-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                const tabName = this.dataset.tab;
                
                // Update tab styles
                document.querySelectorAll('.progress-tab').forEach(t => {
                    t.classList.remove('border-blue-500', 'text-blue-600');
                    t.classList.add('border-transparent', 'text-gray-500');
                });
                this.classList.add('border-blue-500', 'text-blue-600');
                this.classList.remove('border-transparent', 'text-gray-500');
                
                // Show corresponding chart
                document.querySelectorAll('.chart-container').forEach(chart => {
                    chart.classList.add('hidden');
                });
                document.getElementById(tabName + '-chart').classList.remove('hidden');
            });
        });

        // PDF Report Generation
        function generatePDFReport() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // Header
            doc.setFontSize(20);
            doc.text('GlucoVigil Health Report', 20, 30);
            
            doc.setFontSize(12);
            doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 45);
            doc.text(`Patient: ${currentUser ? currentUser.username : 'User'}`, 20, 55);
            
            // Risk Assessment
            doc.setFontSize(16);
            doc.text('Risk Assessment', 20, 75);
            
            doc.setFontSize(12);
            doc.text(`Risk Score: ${healthData.riskScore}/10`, 20, 90);
            doc.text(`Risk Level: ${healthData.riskLevel.toUpperCase()}`, 20, 100);
            
            // Current Metrics
            doc.setFontSize(16);
            doc.text('Current Health Metrics', 20, 120);
            
            doc.setFontSize(12);
            doc.text(`Blood Glucose: ${healthData.bloodSugar} mg/dL`, 20, 135);
            doc.text(`Blood Pressure: ${healthData.bloodPressure.systolic}/${healthData.bloodPressure.diastolic} mmHg`, 20, 145);
            doc.text(`BMI: ${healthData.bmi}`, 20, 155);
            
            // Recommendations
            doc.setFontSize(16);
            doc.text('Recommendations', 20, 175);
            
            doc.setFontSize(12);
            const recommendations = [
                '• Continue regular exercise routine',
                '• Monitor blood glucose weekly',
                '• Maintain healthy diet with high fiber',
                '• Schedule regular medical checkups',
                '• Manage stress through relaxation techniques'
            ];
            
            recommendations.forEach((rec, index) => {
                doc.text(rec, 20, 190 + (index * 10));
            });
            
            // Disclaimer
            doc.setFontSize(10);
            doc.text('Disclaimer: This report is for informational purposes only and should not replace professional medical advice.', 20, 250);
            
            // Save the PDF
            doc.save('glucovigil-health-report.pdf');
        }

        // Profile Management Functions
        function saveProfileChanges() {
            const profileData = {
                username: document.getElementById('profile-username-input').value,
                email: document.getElementById('profile-email-input').value,
                fullName: document.getElementById('profile-fullname-input').value,
                phone: document.getElementById('profile-phone-input').value
            };

            // Validate required fields
            if (!profileData.username || !profileData.email || !profileData.fullName) {
                alert('Please fill in all required fields (Username, Email, Full Name).');
                return;
            }

            // Email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(profileData.email)) {
                alert('Please enter a valid email address.');
                return;
            }

            // Update current user data
            if (currentUser) {
                currentUser = { ...currentUser, ...profileData };
                document.getElementById('user-name').textContent = profileData.fullName.split(' ')[0];
                document.getElementById('profile-username').textContent = profileData.fullName;
            }

            alert('Profile updated successfully!');
        }

        function exportUserData() {
            const exportData = {
                profile: currentUser,
                healthData: healthData,
                exportDate: new Date().toISOString(),
                version: '1.0'
            };

            const dataStr = JSON.stringify(exportData, null, 2);
            const dataBlob = new Blob([dataStr], { type: 'application/json' });
            
            const link = document.createElement('a');
            link.href = URL.createObjectURL(dataBlob);
            link.download = `glucovigil-data-export-${new Date().toISOString().split('T')[0]}.json`;
            link.click();
            
            alert('Your health data has been exported successfully!');
        }

        // Enhanced PDF Report with more comprehensive data
        function generatePDFReport() {
            // Check if profile is completed
            if (!healthData.profileCompleted) {
                alert('Please complete your health profile first to generate a comprehensive report.');
                return;
            }
            
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // Header with logo area
            doc.setFontSize(24);
            doc.setTextColor(59, 130, 246); // Blue color
            doc.text('GlucoVigil', 20, 25);
            doc.setFontSize(16);
            doc.setTextColor(0, 0, 0);
            doc.text('Comprehensive Health Analytics Report', 20, 35);
            
            // Patient Information
            doc.setFontSize(12);
            doc.text(`Generated: ${new Date().toLocaleDateString()}`, 20, 50);
            doc.text(`Patient: ${currentUser ? currentUser.username : 'User'}`, 20, 60);
            doc.text(`Report ID: GV-${Date.now()}`, 20, 70);
            
            // Risk Assessment Section
            doc.setFontSize(16);
            doc.setTextColor(220, 38, 127); // Pink color
            doc.text('Risk Assessment Summary', 20, 90);
            
            doc.setFontSize(12);
            doc.setTextColor(0, 0, 0);
            doc.text(`Overall Risk Score: ${healthData.riskScore}/10`, 20, 105);
            doc.text(`Risk Level: ${healthData.riskLevel.toUpperCase()}`, 20, 115);
            
            // Current Health Metrics
            doc.setFontSize(16);
            doc.setTextColor(34, 197, 94); // Green color
            doc.text('Current Health Metrics', 20, 135);
            
            doc.setFontSize(12);
            doc.setTextColor(0, 0, 0);
            doc.text(`Blood Glucose: ${healthData.bloodSugar} mg/dL`, 20, 150);
            doc.text(`Blood Pressure: ${healthData.bloodPressure.systolic}/${healthData.bloodPressure.diastolic} mmHg`, 20, 160);
            doc.text(`BMI: ${healthData.bmi}`, 20, 170);
            
            // Symptom Assessment (if available)
            if (healthData.symptoms && Object.keys(healthData.symptoms).length > 0) {
                doc.setFontSize(16);
                doc.setTextColor(168, 85, 247); // Purple color
                doc.text('Recent Symptom Assessment', 20, 190);
                
                doc.setFontSize(12);
                doc.setTextColor(0, 0, 0);
                let yPos = 205;
                Object.entries(healthData.symptoms).forEach(([symptom, level]) => {
                    doc.text(`${symptom}: ${level}/5`, 20, yPos);
                    yPos += 10;
                });
                
                if (healthData.symptomSeverity) {
                    doc.text(`Average Severity: ${healthData.symptomSeverity.average}/5 (${healthData.symptomSeverity.level})`, 20, yPos + 5);
                }
            }
            
            // Mental Health Assessment (if available)
            if (healthData.mentalHealth) {
                doc.setFontSize(16);
                doc.setTextColor(245, 158, 11); // Orange color
                doc.text('Mental Health Assessment', 20, yPos + 25 || 190);
                
                doc.setFontSize(12);
                doc.setTextColor(0, 0, 0);
                const mhYPos = yPos + 40 || 205;
                doc.text(`Mental Health Score: ${healthData.mentalHealth.score}/10`, 20, mhYPos);
                doc.text(`Mood: ${healthData.mentalHealth.mood}`, 20, mhYPos + 10);
                doc.text(`Energy Level: ${healthData.mentalHealth.energy}/10`, 20, mhYPos + 20);
                doc.text(`Stress Level: ${healthData.mentalHealth.stress}/10`, 20, mhYPos + 30);
                doc.text(`Sleep Quality: ${healthData.mentalHealth.sleep}`, 20, mhYPos + 40);
            }
            
            // Recommendations
            doc.addPage();
            doc.setFontSize(16);
            doc.setTextColor(59, 130, 246);
            doc.text('Personalized Recommendations', 20, 30);
            
            doc.setFontSize(12);
            doc.setTextColor(0, 0, 0);
            const recommendations = [
                '• Continue regular exercise routine (30 minutes daily)',
                '• Monitor blood glucose levels weekly',
                '• Maintain a balanced diet rich in fiber and low in processed sugars',
                '• Practice stress management techniques (meditation, deep breathing)',
                '• Ensure 7-9 hours of quality sleep nightly',
                '• Stay hydrated with 8+ glasses of water daily',
                '• Schedule regular medical checkups',
                '• Consider consulting with a nutritionist for meal planning'
            ];
            
            let recYPos = 45;
            recommendations.forEach(rec => {
                doc.text(rec, 20, recYPos);
                recYPos += 10;
            });
            
            // Medical Disclaimer
            doc.setFontSize(10);
            doc.setTextColor(107, 114, 128);
            doc.text('Medical Disclaimer: This report is for informational purposes only and should not replace', 20, 250);
            doc.text('professional medical advice. Please consult with your healthcare provider for proper', 20, 260);
            doc.text('diagnosis and treatment recommendations.', 20, 270);
            
            // Footer
            doc.setFontSize(8);
            doc.text(`Generated by GlucoVigil Health Analytics Platform | ${new Date().toLocaleString()}`, 20, 285);
            
            // Save the PDF
            try {
                doc.save(`glucovigil-health-report-${new Date().toISOString().split('T')[0]}.pdf`);
                alert('Health report downloaded successfully!');
            } catch (error) {
                console.error('PDF generation error:', error);
                alert('There was an error generating the PDF report. Please try again.');
            }
        }

        // Health Data Management Functions
        document.getElementById('health-data-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const entryData = {
                id: Date.now(),
                date: document.getElementById('entry-date').value,
                time: document.getElementById('entry-time').value,
                glucose: document.getElementById('glucose-reading').value,
                systolicBP: document.getElementById('systolic-bp').value,
                diastolicBP: document.getElementById('diastolic-bp').value,
                heartRate: document.getElementById('heart-rate').value,
                weight: document.getElementById('weight-entry').value,
                temperature: document.getElementById('temperature').value,
                hba1c: document.getElementById('hba1c').value,
                cholesterol: document.getElementById('cholesterol').value,
                hdl: document.getElementById('hdl').value,
                ldl: document.getElementById('ldl').value,
                triglycerides: document.getElementById('triglycerides').value,
                creatinine: document.getElementById('creatinine').value,
                sleepHours: document.getElementById('sleep-hours').value,
                exerciseMinutes: document.getElementById('exercise-minutes').value,
                waterIntake: document.getElementById('water-intake').value,
                stressLevel: document.getElementById('stress-level-entry').value,
                medications: document.getElementById('medications').value,
                insulinTaken: document.getElementById('insulin-taken').checked,
                vitaminsTaken: document.getElementById('vitamins-taken').checked,
                notes: document.getElementById('health-notes').value,
                timestamp: new Date().toISOString()
            };
            
            // Add to entries array
            healthDataEntries.push(entryData);
            
            // Update health data with latest values
            if (entryData.glucose) healthData.bloodSugar = parseInt(entryData.glucose);
            if (entryData.systolicBP && entryData.diastolicBP) {
                healthData.bloodPressure = { 
                    systolic: parseInt(entryData.systolicBP), 
                    diastolic: parseInt(entryData.diastolicBP) 
                };
            }
            if (entryData.weight) {
                const height = 1.75; // Default height in meters, should be from profile
                healthData.bmi = (parseFloat(entryData.weight) / (height * height)).toFixed(1);
            }
            
            // Update UI
            updateHealthDataStats();
            populateHealthDataTable();
            
            // Reset form
            document.getElementById('health-data-form').reset();
            
            // Set current date and time as defaults
            setCurrentDateTime();
            
            alert('Health data entry saved successfully!');
        });

        // Stress level slider for health data form
        document.getElementById('stress-level-entry').addEventListener('input', function() {
            document.getElementById('stress-display').textContent = this.value;
        });

        function setCurrentDateTime() {
            const now = new Date();
            document.getElementById('entry-date').value = now.toISOString().split('T')[0];
            document.getElementById('entry-time').value = now.toTimeString().slice(0, 5);
        }

        function updateHealthDataStats() {
            const totalEntries = healthDataEntries.length;
            document.getElementById('total-data-points').textContent = totalEntries;
            
            if (totalEntries > 0) {
                const lastEntry = healthDataEntries[totalEntries - 1];
                document.getElementById('last-update-date').textContent = new Date(lastEntry.timestamp).toLocaleDateString();
                
                // Calculate trend (simplified)
                if (totalEntries > 1) {
                    const recent = healthDataEntries.slice(-3);
                    const avgGlucose = recent.filter(e => e.glucose).reduce((sum, e) => sum + parseFloat(e.glucose), 0) / recent.filter(e => e.glucose).length;
                    document.getElementById('health-trend').textContent = avgGlucose < 100 ? 'Improving' : avgGlucose > 120 ? 'Needs Attention' : 'Stable';
                }
            }
        }

        function populateHealthDataTable() {
            const tableBody = document.getElementById('health-data-table');
            const emptyState = document.getElementById('empty-health-data');
            
            if (healthDataEntries.length === 0) {
                tableBody.innerHTML = '';
                emptyState.style.display = 'block';
                return;
            }
            
            emptyState.style.display = 'none';
            
            // Sort entries by date (newest first)
            const sortedEntries = [...healthDataEntries].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
            
            tableBody.innerHTML = sortedEntries.map(entry => `
                <tr class="hover:bg-gray-50">
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${new Date(entry.timestamp).toLocaleDateString()}
                        <div class="text-xs text-gray-500">${new Date(entry.timestamp).toLocaleTimeString()}</div>
                    </td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${entry.glucose ? entry.glucose + ' mg/dL' : '-'}
                    </td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${entry.systolicBP && entry.diastolicBP ? entry.systolicBP + '/' + entry.diastolicBP : '-'}
                    </td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${entry.weight ? entry.weight + ' kg' : '-'}
                    </td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${entry.hba1c ? entry.hba1c + '%' : '-'}
                    </td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm font-medium">
                        <button onclick="viewHealthEntry(${entry.id})" class="text-blue-600 hover:text-blue-900 mr-2">View</button>
                        <button onclick="editHealthEntry(${entry.id})" class="text-green-600 hover:text-green-900 mr-2">Edit</button>
                        <button onclick="deleteHealthEntry(${entry.id})" class="text-red-600 hover:text-red-900">Delete</button>
                    </td>
                </tr>
            `).join('');
        }

        function viewHealthEntry(id) {
            const entry = healthDataEntries.find(e => e.id === id);
            if (!entry) return;
            
            let details = `Health Data Entry - ${new Date(entry.timestamp).toLocaleDateString()}\n\n`;
            
            if (entry.glucose) details += `Blood Glucose: ${entry.glucose} mg/dL\n`;
            if (entry.systolicBP && entry.diastolicBP) details += `Blood Pressure: ${entry.systolicBP}/${entry.diastolicBP} mmHg\n`;
            if (entry.heartRate) details += `Heart Rate: ${entry.heartRate} bpm\n`;
            if (entry.weight) details += `Weight: ${entry.weight} kg\n`;
            if (entry.temperature) details += `Temperature: ${entry.temperature}°C\n`;
            if (entry.hba1c) details += `HbA1c: ${entry.hba1c}%\n`;
            if (entry.cholesterol) details += `Total Cholesterol: ${entry.cholesterol} mg/dL\n`;
            if (entry.sleepHours) details += `Sleep: ${entry.sleepHours} hours\n`;
            if (entry.exerciseMinutes) details += `Exercise: ${entry.exerciseMinutes} minutes\n`;
            if (entry.stressLevel) details += `Stress Level: ${entry.stressLevel}/10\n`;
            if (entry.notes) details += `\nNotes: ${entry.notes}`;
            
            alert(details);
        }

        function editHealthEntry(id) {
            const entry = healthDataEntries.find(e => e.id === id);
            if (!entry) return;
            
            // Populate form with entry data
            document.getElementById('entry-date').value = entry.date;
            document.getElementById('entry-time').value = entry.time;
            if (entry.glucose) document.getElementById('glucose-reading').value = entry.glucose;
            if (entry.systolicBP) document.getElementById('systolic-bp').value = entry.systolicBP;
            if (entry.diastolicBP) document.getElementById('diastolic-bp').value = entry.diastolicBP;
            if (entry.heartRate) document.getElementById('heart-rate').value = entry.heartRate;
            if (entry.weight) document.getElementById('weight-entry').value = entry.weight;
            if (entry.temperature) document.getElementById('temperature').value = entry.temperature;
            if (entry.hba1c) document.getElementById('hba1c').value = entry.hba1c;
            if (entry.cholesterol) document.getElementById('cholesterol').value = entry.cholesterol;
            if (entry.hdl) document.getElementById('hdl').value = entry.hdl;
            if (entry.ldl) document.getElementById('ldl').value = entry.ldl;
            if (entry.triglycerides) document.getElementById('triglycerides').value = entry.triglycerides;
            if (entry.creatinine) document.getElementById('creatinine').value = entry.creatinine;
            if (entry.sleepHours) document.getElementById('sleep-hours').value = entry.sleepHours;
            if (entry.exerciseMinutes) document.getElementById('exercise-minutes').value = entry.exerciseMinutes;
            if (entry.waterIntake) document.getElementById('water-intake').value = entry.waterIntake;
            if (entry.stressLevel) document.getElementById('stress-level-entry').value = entry.stressLevel;
            if (entry.medications) document.getElementById('medications').value = entry.medications;
            document.getElementById('insulin-taken').checked = entry.insulinTaken;
            document.getElementById('vitamins-taken').checked = entry.vitaminsTaken;
            if (entry.notes) document.getElementById('health-notes').value = entry.notes;
            
            // Remove the entry so it can be re-added when form is submitted
            healthDataEntries = healthDataEntries.filter(e => e.id !== id);
            updateHealthDataStats();
            populateHealthDataTable();
            
            // Scroll to form
            document.getElementById('health-data-form').scrollIntoView({ behavior: 'smooth' });
        }

        function deleteHealthEntry(id) {
            if (confirm('Are you sure you want to delete this health data entry?')) {
                healthDataEntries = healthDataEntries.filter(e => e.id !== id);
                updateHealthDataStats();
                populateHealthDataTable();
            }
        }

        function exportHealthData() {
            if (healthDataEntries.length === 0) {
                alert('No health data to export.');
                return;
            }
            
            const exportData = {
                user: currentUser?.username || 'Unknown',
                exportDate: new Date().toISOString(),
                totalEntries: healthDataEntries.length,
                entries: healthDataEntries
            };
            
            const dataStr = JSON.stringify(exportData, null, 2);
            const dataBlob = new Blob([dataStr], { type: 'application/json' });
            
            const link = document.createElement('a');
            link.href = URL.createObjectURL(dataBlob);
            link.download = `glucovigil-health-data-${new Date().toISOString().split('T')[0]}.json`;
            link.click();
            
            alert('Health data exported successfully!');
        }

        function compareHealthData() {
            if (healthDataEntries.length < 2) {
                alert('You need at least 2 health data entries to compare trends.');
                return;
            }
            
            // Sort entries by date
            const sortedEntries = [...healthDataEntries].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));
            const earliest = sortedEntries[0];
            const latest = sortedEntries[sortedEntries.length - 1];
            
            let comparison = '📊 HEALTH DATA COMPARISON REPORT\n';
            comparison += '═══════════════════════════════════\n\n';
            comparison += `📅 Analysis Period: ${new Date(earliest.timestamp).toLocaleDateString()} to ${new Date(latest.timestamp).toLocaleDateString()}\n`;
            comparison += `📈 Total Entries: ${healthDataEntries.length}\n\n`;
            
            // Blood Glucose Analysis
            const glucoseEntries = sortedEntries.filter(e => e.glucose);
            if (glucoseEntries.length >= 2) {
                const firstGlucose = parseFloat(glucoseEntries[0].glucose);
                const lastGlucose = parseFloat(glucoseEntries[glucoseEntries.length - 1].glucose);
                const avgGlucose = glucoseEntries.reduce((sum, e) => sum + parseFloat(e.glucose), 0) / glucoseEntries.length;
                const glucoseChange = lastGlucose - firstGlucose;
                
                comparison += `🩸 BLOOD GLUCOSE TRENDS:\n`;
                comparison += `   First Reading: ${firstGlucose} mg/dL\n`;
                comparison += `   Latest Reading: ${lastGlucose} mg/dL\n`;
                comparison += `   Average: ${avgGlucose.toFixed(1)} mg/dL\n`;
                comparison += `   Change: ${glucoseChange > 0 ? '+' : ''}${glucoseChange.toFixed(1)} mg/dL`;
                comparison += glucoseChange < 0 ? ' ✅ (Improving)' : glucoseChange > 0 ? ' ⚠️ (Increasing)' : ' ➡️ (Stable)';
                comparison += '\n\n';
            }
            
            // Weight Analysis
            const weightEntries = sortedEntries.filter(e => e.weight);
            if (weightEntries.length >= 2) {
                const firstWeight = parseFloat(weightEntries[0].weight);
                const lastWeight = parseFloat(weightEntries[weightEntries.length - 1].weight);
                const weightChange = lastWeight - firstWeight;
                
                comparison += `⚖️ WEIGHT TRENDS:\n`;
                comparison += `   First Reading: ${firstWeight} kg\n`;
                comparison += `   Latest Reading: ${lastWeight} kg\n`;
                comparison += `   Change: ${weightChange > 0 ? '+' : ''}${weightChange.toFixed(1)} kg`;
                comparison += weightChange < 0 ? ' ✅ (Weight Loss)' : weightChange > 0 ? ' ⚠️ (Weight Gain)' : ' ➡️ (Stable)';
                comparison += '\n\n';
            }
            
            // Blood Pressure Analysis
            const bpEntries = sortedEntries.filter(e => e.systolicBP && e.diastolicBP);
            if (bpEntries.length >= 2) {
                const firstSys = parseInt(bpEntries[0].systolicBP);
                const lastSys = parseInt(bpEntries[bpEntries.length - 1].systolicBP);
                const firstDia = parseInt(bpEntries[0].diastolicBP);
                const lastDia = parseInt(bpEntries[bpEntries.length - 1].diastolicBP);
                const sysChange = lastSys - firstSys;
                const diaChange = lastDia - firstDia;
                
                comparison += `💓 BLOOD PRESSURE TRENDS:\n`;
                comparison += `   First Reading: ${firstSys}/${firstDia} mmHg\n`;
                comparison += `   Latest Reading: ${lastSys}/${lastDia} mmHg\n`;
                comparison += `   Systolic Change: ${sysChange > 0 ? '+' : ''}${sysChange} mmHg\n`;
                comparison += `   Diastolic Change: ${diaChange > 0 ? '+' : ''}${diaChange} mmHg\n\n`;
            }
            
            // Overall Health Score
            let healthScore = 5; // Base score
            if (glucoseEntries.length >= 2) {
                const avgGlucose = glucoseEntries.reduce((sum, e) => sum + parseFloat(e.glucose), 0) / glucoseEntries.length;
                if (avgGlucose < 100) healthScore += 1;
                else if (avgGlucose > 126) healthScore -= 2;
                else if (avgGlucose > 100) healthScore -= 1;
            }
            
            comparison += `🎯 OVERALL HEALTH TREND:\n`;
            comparison += `   Health Score: ${healthScore}/10\n`;
            comparison += `   Status: ${healthScore >= 7 ? '✅ Excellent Progress' : healthScore >= 5 ? '⚠️ Needs Attention' : '🚨 Requires Immediate Action'}\n\n`;
            
            comparison += `💡 RECOMMENDATIONS:\n`;
            if (glucoseEntries.length >= 2) {
                const avgGlucose = glucoseEntries.reduce((sum, e) => sum + parseFloat(e.glucose), 0) / glucoseEntries.length;
                if (avgGlucose > 100) {
                    comparison += `   • Focus on blood glucose management\n`;
                    comparison += `   • Consider dietary adjustments\n`;
                }
            }
            comparison += `   • Continue regular monitoring\n`;
            comparison += `   • Consult healthcare provider for guidance\n`;
            
            alert(comparison);
        }

        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            showPage('home');
            lucide.createIcons();
            setCurrentDateTime();
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'9748e293e7640553',t:'MTc1NjEwMTc5NC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
